{"ast":null,"code":"// import React from \"react\";\n// import { Button, TextField, Box, Container, Typography } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n\n// // AuthManager class to handle authentication\n// class AuthManager {\n//     constructor(apiBase) {\n//         this.apiBase = apiBase;\n//     }\n\n//     async login(email, password) {\n//         const response = await fetch(`${this.apiBase}/api/admin-login`, {\n//             method: \"POST\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({ email, password }),\n//         });\n\n//         if (!response.ok) {\n//             const errorData = await response.json();\n//             throw new Error(errorData.message || \"Login failed\");\n//         }\n\n//         return await response.json();\n//     }\n// }\n\n// export default function AdminSignInPage() {\n//     const [email, setEmail] = React.useState(\"\");\n//     const [password, setPassword] = React.useState(\"\");\n//     const [error, setError] = React.useState(null);\n//     const navigate = useNavigate();\n\n//     const authManager = React.useMemo(() => new AuthManager(\"http://localhost:5000\"), []);\n\n//     const handleSignIn = async () => {\n//         try {\n//             // Reset error state\n//             setError(null);\n\n//             // Perform login using AuthManager\n//             const data = await authManager.login(email, password);\n//             console.log(\"Login successful:\", data);\n\n//             // Navigate to the admin dashboard\n//             navigate(\"/adminProfile\");\n//         } catch (err) {\n//             console.error(\"Login error:\", err.message);\n//             setError(err.message);\n//         }\n//     };\n\n//     return (\n//         <Container\n//             maxWidth=\"sm\"\n//             sx={{\n//                 display: \"flex\",\n//                 flexDirection: \"column\",\n//                 alignItems: \"center\",\n//                 justifyContent: \"center\",\n//                 minHeight: \"100vh\",\n//             }}\n//         >\n//             <Box\n//                 sx={{\n//                     display: \"flex\",\n//                     flexDirection: \"column\",\n//                     alignItems: \"center\",\n//                     justifyContent: \"center\",\n//                     boxShadow: 3,\n//                     padding: \"20px\",\n//                     borderRadius: \"8px\",\n//                     backgroundColor: \"white\",\n//                     width: \"100%\",\n//                     maxWidth: \"600px\",\n//                     margin: \"auto\",\n//                     marginTop: \"20px\",\n//                     height: \"auto\",\n//                     minHeight: \"200px\",\n//                     \"@media (max-width:600px)\": {\n//                         width: \"90%\",\n//                         padding: \"16px\",\n//                     },\n//                 }}\n//             >\n//                 <img\n//                     src=\"ejustLogoSignin.png\"\n//                     alt=\"Logo\"\n//                     style={{\n//                         width: \"70px\",\n//                         height: \"auto\",\n//                         marginBottom: \"16px\",\n//                     }}\n//                 />\n//                 <Typography variant=\"h4\" gutterBottom>\n//                     Admin Sign-In\n//                 </Typography>\n\n//                 <Box\n//                     component=\"form\"\n//                     sx={{\n//                         display: \"flex\",\n//                         flexDirection: \"column\",\n//                         gap: 2,\n//                         width: \"100%\",\n//                     }}\n//                     noValidate\n//                     autoComplete=\"off\"\n//                 >\n//                     {/* Email Field */}\n//                     <TextField\n//                         label=\"Email\"\n//                         variant=\"outlined\"\n//                         type=\"email\"\n//                         fullWidth\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                     />\n\n//                     {/* Password Field */}\n//                     <TextField\n//                         label=\"Password\"\n//                         variant=\"outlined\"\n//                         type=\"password\"\n//                         fullWidth\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                     />\n\n//                     {/* Error Message */}\n//                     {error && (\n//                         <Typography color=\"error\" variant=\"body2\">\n//                             {error}\n//                         </Typography>\n//                     )}\n\n//                     {/* Sign-In Button */}\n//                     <Button\n//                         variant=\"contained\"\n//                         color=\"primary\"\n//                         fullWidth\n//                         onClick={handleSignIn}\n//                     >\n//                         Sign In\n//                     </Button>\n//                 </Box>\n//             </Box>\n//         </Container>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/admin.js"],"sourcesContent":["// import React from \"react\";\r\n// import { Button, TextField, Box, Container, Typography } from \"@mui/material\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// // AuthManager class to handle authentication\r\n// class AuthManager {\r\n//     constructor(apiBase) {\r\n//         this.apiBase = apiBase;\r\n//     }\r\n\r\n//     async login(email, password) {\r\n//         const response = await fetch(`${this.apiBase}/api/admin-login`, {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify({ email, password }),\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//             const errorData = await response.json();\r\n//             throw new Error(errorData.message || \"Login failed\");\r\n//         }\r\n\r\n//         return await response.json();\r\n//     }\r\n// }\r\n\r\n// export default function AdminSignInPage() {\r\n//     const [email, setEmail] = React.useState(\"\");\r\n//     const [password, setPassword] = React.useState(\"\");\r\n//     const [error, setError] = React.useState(null);\r\n//     const navigate = useNavigate();\r\n\r\n//     const authManager = React.useMemo(() => new AuthManager(\"http://localhost:5000\"), []);\r\n\r\n//     const handleSignIn = async () => {\r\n//         try {\r\n//             // Reset error state\r\n//             setError(null);\r\n\r\n//             // Perform login using AuthManager\r\n//             const data = await authManager.login(email, password);\r\n//             console.log(\"Login successful:\", data);\r\n\r\n//             // Navigate to the admin dashboard\r\n//             navigate(\"/adminProfile\");\r\n//         } catch (err) {\r\n//             console.error(\"Login error:\", err.message);\r\n//             setError(err.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <Container\r\n//             maxWidth=\"sm\"\r\n//             sx={{\r\n//                 display: \"flex\",\r\n//                 flexDirection: \"column\",\r\n//                 alignItems: \"center\",\r\n//                 justifyContent: \"center\",\r\n//                 minHeight: \"100vh\",\r\n//             }}\r\n//         >\r\n//             <Box\r\n//                 sx={{\r\n//                     display: \"flex\",\r\n//                     flexDirection: \"column\",\r\n//                     alignItems: \"center\",\r\n//                     justifyContent: \"center\",\r\n//                     boxShadow: 3,\r\n//                     padding: \"20px\",\r\n//                     borderRadius: \"8px\",\r\n//                     backgroundColor: \"white\",\r\n//                     width: \"100%\",\r\n//                     maxWidth: \"600px\",\r\n//                     margin: \"auto\",\r\n//                     marginTop: \"20px\",\r\n//                     height: \"auto\",\r\n//                     minHeight: \"200px\",\r\n//                     \"@media (max-width:600px)\": {\r\n//                         width: \"90%\",\r\n//                         padding: \"16px\",\r\n//                     },\r\n//                 }}\r\n//             >\r\n//                 <img\r\n//                     src=\"ejustLogoSignin.png\"\r\n//                     alt=\"Logo\"\r\n//                     style={{\r\n//                         width: \"70px\",\r\n//                         height: \"auto\",\r\n//                         marginBottom: \"16px\",\r\n//                     }}\r\n//                 />\r\n//                 <Typography variant=\"h4\" gutterBottom>\r\n//                     Admin Sign-In\r\n//                 </Typography>\r\n\r\n//                 <Box\r\n//                     component=\"form\"\r\n//                     sx={{\r\n//                         display: \"flex\",\r\n//                         flexDirection: \"column\",\r\n//                         gap: 2,\r\n//                         width: \"100%\",\r\n//                     }}\r\n//                     noValidate\r\n//                     autoComplete=\"off\"\r\n//                 >\r\n//                     {/* Email Field */}\r\n//                     <TextField\r\n//                         label=\"Email\"\r\n//                         variant=\"outlined\"\r\n//                         type=\"email\"\r\n//                         fullWidth\r\n//                         value={email}\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                     />\r\n\r\n//                     {/* Password Field */}\r\n//                     <TextField\r\n//                         label=\"Password\"\r\n//                         variant=\"outlined\"\r\n//                         type=\"password\"\r\n//                         fullWidth\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                     />\r\n\r\n//                     {/* Error Message */}\r\n//                     {error && (\r\n//                         <Typography color=\"error\" variant=\"body2\">\r\n//                             {error}\r\n//                         </Typography>\r\n//                     )}\r\n\r\n//                     {/* Sign-In Button */}\r\n//                     <Button\r\n//                         variant=\"contained\"\r\n//                         color=\"primary\"\r\n//                         fullWidth\r\n//                         onClick={handleSignIn}\r\n//                     >\r\n//                         Sign In\r\n//                     </Button>\r\n//                 </Box>\r\n//             </Box>\r\n//         </Container>\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}