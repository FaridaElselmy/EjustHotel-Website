{"ast":null,"code":"// import React, { useEffect, useState, useMemo } from \"react\";\n// import {\n//     Box,\n//     Typography,\n//     CircularProgress,\n//     Grid,\n//     Paper,\n//     List,\n//     ListItem,\n//     ListItemText,\n//     Divider,\n// } from \"@mui/material\";\n\n// class AdminManager {\n//     constructor(apiBase) {\n//         this.apiBase = apiBase;\n//     }\n\n//     async fetchMessages() {\n//         const response = await fetch(`${this.apiBase}/api/admin/messages`);\n//         if (!response.ok) {\n//             throw new Error(\"Failed to fetch messages.\");\n//         }\n//         return await response.json();\n//     }\n// }\n\n// function AdminProfile() {\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [messages, setMessages] = useState([]);\n\n//     const adminManager = useMemo(() => new AdminManager(\"http://localhost:5000\"), []);\n\n//     useEffect(() => {\n//         const loadMessages = async () => {\n//             try {\n//                 const fetchedMessages = await adminManager.fetchMessages();\n//                 setMessages(fetchedMessages);\n//             } catch (err) {\n//                 setError(err.message || \"Error loading messages.\");\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         loadMessages();\n//     }, [adminManager]);\n\n//     if (loading) {\n//         return (\n//             <Box\n//                 sx={{\n//                     display: \"flex\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     minHeight: \"100vh\",\n//                 }}\n//             >\n//                 <CircularProgress />\n//             </Box>\n//         );\n//     }\n\n//     if (error) {\n//         return (\n//             <Box sx={{ textAlign: \"center\", marginTop: 3 }}>\n//                 <Typography variant=\"h6\" color=\"error\">\n//                     {error}\n//                 </Typography>\n//             </Box>\n//         );\n//     }\n\n//     return (\n//         <Box\n//             sx={{\n//                 minHeight: \"100vh\",\n//                 backgroundColor: \"#f9f9f9\",\n//                 padding: 4,\n//             }}\n//         >\n//             <Grid container spacing={2} justifyContent=\"center\">\n//                 <Grid item xs={12} sm={10} md={8}>\n//                     <Paper\n//                         sx={{\n//                             padding: 3,\n//                             backgroundColor: \"white\",\n//                         }}\n//                     >\n//                         <Typography variant=\"h4\" align=\"center\" sx={{ marginBottom: 2 }}>\n//                             Admin Dashboard: Received Messages\n//                         </Typography>\n\n//                         {messages.length > 0 ? (\n//                             <List>\n//                                 {messages.map((message, index) => (\n//                                     <React.Fragment key={index}>\n//                                         <ListItem>\n//                                             <ListItemText primary=\"User Email\" secondary={message.email} />\n//                                         </ListItem>\n//                                         <ListItem>\n//                                             <ListItemText primary=\"Message\" secondary={message.content} />\n//                                         </ListItem>\n//                                         <Divider sx={{ marginY: 2 }} />\n//                                     </React.Fragment>\n//                                 ))}\n//                             </List>\n//                         ) : (\n//                             <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\n//                                 No messages received.\n//                             </Typography>\n//                         )}\n//                     </Paper>\n//                 </Grid>\n//             </Grid>\n//         </Box>\n//     );\n// }\n\n// export default AdminProfile;","map":{"version":3,"names":[],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/adminProfile.js"],"sourcesContent":["// import React, { useEffect, useState, useMemo } from \"react\";\r\n// import {\r\n//     Box,\r\n//     Typography,\r\n//     CircularProgress,\r\n//     Grid,\r\n//     Paper,\r\n//     List,\r\n//     ListItem,\r\n//     ListItemText,\r\n//     Divider,\r\n// } from \"@mui/material\";\r\n\r\n// class AdminManager {\r\n//     constructor(apiBase) {\r\n//         this.apiBase = apiBase;\r\n//     }\r\n\r\n//     async fetchMessages() {\r\n//         const response = await fetch(`${this.apiBase}/api/admin/messages`);\r\n//         if (!response.ok) {\r\n//             throw new Error(\"Failed to fetch messages.\");\r\n//         }\r\n//         return await response.json();\r\n//     }\r\n// }\r\n\r\n// function AdminProfile() {\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     const [messages, setMessages] = useState([]);\r\n\r\n//     const adminManager = useMemo(() => new AdminManager(\"http://localhost:5000\"), []);\r\n\r\n//     useEffect(() => {\r\n//         const loadMessages = async () => {\r\n//             try {\r\n//                 const fetchedMessages = await adminManager.fetchMessages();\r\n//                 setMessages(fetchedMessages);\r\n//             } catch (err) {\r\n//                 setError(err.message || \"Error loading messages.\");\r\n//             } finally {\r\n//                 setLoading(false);\r\n//             }\r\n//         };\r\n\r\n//         loadMessages();\r\n//     }, [adminManager]);\r\n\r\n//     if (loading) {\r\n//         return (\r\n//             <Box\r\n//                 sx={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     minHeight: \"100vh\",\r\n//                 }}\r\n//             >\r\n//                 <CircularProgress />\r\n//             </Box>\r\n//         );\r\n//     }\r\n\r\n//     if (error) {\r\n//         return (\r\n//             <Box sx={{ textAlign: \"center\", marginTop: 3 }}>\r\n//                 <Typography variant=\"h6\" color=\"error\">\r\n//                     {error}\r\n//                 </Typography>\r\n//             </Box>\r\n//         );\r\n//     }\r\n\r\n//     return (\r\n//         <Box\r\n//             sx={{\r\n//                 minHeight: \"100vh\",\r\n//                 backgroundColor: \"#f9f9f9\",\r\n//                 padding: 4,\r\n//             }}\r\n//         >\r\n//             <Grid container spacing={2} justifyContent=\"center\">\r\n//                 <Grid item xs={12} sm={10} md={8}>\r\n//                     <Paper\r\n//                         sx={{\r\n//                             padding: 3,\r\n//                             backgroundColor: \"white\",\r\n//                         }}\r\n//                     >\r\n//                         <Typography variant=\"h4\" align=\"center\" sx={{ marginBottom: 2 }}>\r\n//                             Admin Dashboard: Received Messages\r\n//                         </Typography>\r\n\r\n//                         {messages.length > 0 ? (\r\n//                             <List>\r\n//                                 {messages.map((message, index) => (\r\n//                                     <React.Fragment key={index}>\r\n//                                         <ListItem>\r\n//                                             <ListItemText primary=\"User Email\" secondary={message.email} />\r\n//                                         </ListItem>\r\n//                                         <ListItem>\r\n//                                             <ListItemText primary=\"Message\" secondary={message.content} />\r\n//                                         </ListItem>\r\n//                                         <Divider sx={{ marginY: 2 }} />\r\n//                                     </React.Fragment>\r\n//                                 ))}\r\n//                             </List>\r\n//                         ) : (\r\n//                             <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\r\n//                                 No messages received.\r\n//                             </Typography>\r\n//                         )}\r\n//                     </Paper>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </Box>\r\n//     );\r\n// }\r\n\r\n// export default AdminProfile;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}