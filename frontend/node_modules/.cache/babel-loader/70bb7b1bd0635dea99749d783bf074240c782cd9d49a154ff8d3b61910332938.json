{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\passwordResetRequest.js\",\n  _s = $RefreshSig$();\n// src/pages/PasswordResetRequest.js\nimport React, { useState } from \"react\";\nimport { Box, TextField, Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetRequest = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/reset-password-request\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"Check your email for the password reset link.\");\n      } else {\n        setMessage(data.message || \"Error occurred\");\n      }\n    } catch (error) {\n      setMessage(\"Error occurred while requesting reset\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Request Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        fullWidth: true,\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        sx: {\n          marginBottom: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: loading,\n        children: loading ? \"Sending...\" : \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        marginTop: 2\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetRequest, \"lsKEJvt6dUElF2eLHV9XHSn3IWA=\");\n_c = PasswordResetRequest;\nexport default PasswordResetRequest;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetRequest\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","jsxDEV","_jsxDEV","PasswordResetRequest","_s","email","setEmail","message","setMessage","loading","setLoading","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","sx","padding","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","fullWidth","required","value","onChange","e","target","marginBottom","type","color","disabled","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/passwordResetRequest.js"],"sourcesContent":["// src/pages/PasswordResetRequest.js\r\nimport React, { useState } from \"react\";\r\nimport { Box, TextField, Button, Typography } from \"@mui/material\";\r\n\r\nconst PasswordResetRequest = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/reset-password-request\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage(\"Check your email for the password reset link.\");\r\n      } else {\r\n        setMessage(data.message || \"Error occurred\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Error occurred while requesting reset\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 2 }}>\r\n      <Typography variant=\"h5\">Request Password Reset</Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Email\"\r\n          fullWidth\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          sx={{ marginBottom: 2 }}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? \"Sending...\" : \"Send Reset Link\"}\r\n        </Button>\r\n      </form>\r\n      {message && <Typography sx={{ marginTop: 2 }}>{message}</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PasswordResetRequest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}