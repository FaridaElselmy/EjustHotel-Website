{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\dateSelect.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { Box, TextField, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DatesForm({\n  setBookingId\n}) {\n  _s();\n  const [checkInDate, setCheckInDate] = React.useState(null);\n  const [checkOutDate, setCheckOutDate] = React.useState(null);\n  const submitDates = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/booking/dates\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          checkInDate: checkInDate === null || checkInDate === void 0 ? void 0 : checkInDate.format(\"YYYY-MM-DD\"),\n          // Format date for the backend\n          checkOutDate: checkOutDate === null || checkOutDate === void 0 ? void 0 : checkOutDate.format(\"YYYY-MM-DD\")\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to submit dates\");\n      }\n      const data = await response.json();\n      console.log(\"Dates saved:\", data);\n      setBookingId(data.bookingId); // Pass bookingId to parent or next step\n    } catch (error) {\n      console.error(\"Error submitting dates:\", error.message);\n      alert(error.message || \"Error occurred while saving dates.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2,\n        alignItems: \"center\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-in Date\",\n        value: checkInDate,\n        onChange: newDate => setCheckInDate(newDate),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-out Date\",\n        value: checkOutDate,\n        onChange: newDate => setCheckOutDate(newDate),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: submitDates,\n        children: \"Submit Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(DatesForm, \"cfP92MBFpwecYQ3svuaqmQfurIg=\");\n_c = DatesForm;\nvar _c;\n$RefreshReg$(_c, \"DatesForm\");","map":{"version":3,"names":["React","AdapterDayjs","LocalizationProvider","DatePicker","Box","TextField","Button","jsxDEV","_jsxDEV","DatesForm","setBookingId","_s","checkInDate","setCheckInDate","useState","checkOutDate","setCheckOutDate","submitDates","response","fetch","method","headers","body","JSON","stringify","format","ok","errorData","json","Error","message","data","console","log","bookingId","error","alert","dateAdapter","children","sx","display","flexDirection","gap","alignItems","marginTop","label","value","onChange","newDate","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/dateSelect.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { Box, TextField, Button } from \"@mui/material\";\r\n\r\nexport default function DatesForm({ setBookingId }) {\r\n    const [checkInDate, setCheckInDate] = React.useState(null);\r\n    const [checkOutDate, setCheckOutDate] = React.useState(null);\r\n\r\n    const submitDates = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/booking/dates\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    checkInDate: checkInDate?.format(\"YYYY-MM-DD\"), // Format date for the backend\r\n                    checkOutDate: checkOutDate?.format(\"YYYY-MM-DD\"),\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || \"Failed to submit dates\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Dates saved:\", data);\r\n\r\n            setBookingId(data.bookingId); // Pass bookingId to parent or next step\r\n        } catch (error) {\r\n            console.error(\"Error submitting dates:\", error.message);\r\n            alert(error.message || \"Error occurred while saving dates.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    gap: 2,\r\n                    alignItems: \"center\",\r\n                    marginTop: \"20px\",\r\n                }}\r\n            >\r\n                {/* Check-in Date Picker */}\r\n                <DatePicker\r\n                    label=\"Check-in Date\"\r\n                    value={checkInDate}\r\n                    onChange={(newDate) => setCheckInDate(newDate)}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n\r\n                {/* Check-out Date Picker */}\r\n                <DatePicker\r\n                    label=\"Check-out Date\"\r\n                    value={checkOutDate}\r\n                    onChange={(newDate) => setCheckOutDate(newDate)}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n\r\n                {/* Submit Button */}\r\n                <Button variant=\"contained\" color=\"primary\" onClick={submitDates}>\r\n                    Submit Dates\r\n                </Button>\r\n            </Box>\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}