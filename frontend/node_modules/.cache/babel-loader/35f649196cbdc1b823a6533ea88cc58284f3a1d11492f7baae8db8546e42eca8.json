{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { Box, Typography, Button, Grid, Paper, List, ListItem, ListItemText, CircularProgress } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const ConfirmationPage = () => {\n//   const [bookingDetails, setBookingDetails] = useState(null);\n//   const [services, setServices] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchBookingDetails = async () => {\n//       const userId = localStorage.getItem(\"userId\");\n//       const bookingId = localStorage.getItem(\"bookingId\");\n\n//       if (!userId || !bookingId) {\n//         alert(\"User or booking ID not found\");\n//         return;\n//       }\n\n//       try {\n//         // Fetch booking details for the user\n//         const response = await fetch(`http://localhost:5000/api/booking/${userId}`);\n//         const data = await response.json();\n\n//         if (response.ok) {\n//           const latestBooking = data.bookings[data.bookings.length - 1]; // Get the latest booking\n//           setBookingDetails(latestBooking);\n\n//           // Fetch services for this booking using bookingId\n//           const servicesResponse = await fetch(\n//             `http://localhost:5000/api/services/${bookingId}`\n//           );\n\n//           const servicesData = await servicesResponse.json();\n//           console.log(\"Services Response:\", servicesData);\n\n//           if (servicesResponse.ok) {\n//             setServices(servicesData.services || []); // Ensure services is an array\n//           } else {\n//             setError(\"Failed to fetch services\");\n//           }\n//         } else {\n//           setError(\"Failed to fetch booking details\");\n//         }\n//       } catch (err) {\n//         setError(\"Error fetching data\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchBookingDetails();\n//   }, []);\n\n//   if (loading) {\n//     return (\n//       <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\n//         <CircularProgress />\n//       </Box>\n//     );\n//   }\n\n//   if (error) {\n//     return (\n//       <Box sx={{ textAlign: \"center\", marginTop: 3 }}>\n//         <Typography variant=\"h6\" color=\"error\">\n//           {error}\n//         </Typography>\n//       </Box>\n//     );\n//   }\n\n//   if (!bookingDetails) {\n//     return (\n//       <Box sx={{ textAlign: \"center\", marginTop: 3 }}>\n//         <Typography variant=\"h6\">No booking found.</Typography>\n//       </Box>\n//     );\n//   }\n\n//   return (\n//     <Box\n//       sx={{\n//         minHeight: \"100vh\",\n//         backgroundImage: \"url('./background2.jpg')\", // Background image\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//         backgroundRepeat: \"no-repeat\",\n//         padding: 4,\n//       }}\n//     >\n//       <Grid container spacing={2} justifyContent=\"center\">\n//         <Grid item xs={12} sm={8} md={6}>\n//           <Paper sx={{ padding: 3, backgroundColor: \"rgba(255, 255, 255, 0.8)\" }}>\n//             <Typography variant=\"h4\" align=\"center\" sx={{ marginBottom: 2 }}>\n//               Booking Confirmation\n//             </Typography>\n\n//             <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n//               Booking Details\n//             </Typography>\n//             <List>\n//               <ListItem>\n//                 <ListItemText primary=\"Room Type\" secondary={bookingDetails.roomType} />\n//               </ListItem>\n//               <ListItem>\n//                 <ListItemText\n//                   primary=\"Check-in Date\"\n//                   secondary={new Date(bookingDetails.checkInDate).toLocaleDateString()}\n//                 />\n//               </ListItem>\n//               <ListItem>\n//                 <ListItemText\n//                   primary=\"Check-out Date\"\n//                   secondary={new Date(bookingDetails.checkOutDate).toLocaleDateString()}\n//                 />\n//               </ListItem>\n//               <ListItem>\n//                 <ListItemText primary=\"Number of Guests\" secondary={bookingDetails.guests} />\n//               </ListItem>\n//               <ListItem>\n//                 <ListItemText\n//                     primary=\"Room Price\"\n//                     secondary={`${bookingDetails.totalPrice} EGP`} // Assuming roomPrice is the field holding the price\n//                  />\n//                 </ListItem>\n//             </List>\n\n//             <Typography variant=\"h6\" color=\"primary\" gutterBottom sx={{ marginTop: 3 }}>\n//   Services Booked\n// </Typography>\n// <List>\n//   {services.length ? (\n//     services.map((service, index) => (\n//       <ListItem key={index}>\n//         {/* Food Section */}\n//         <div>\n//           <Typography variant=\"h6\">Food</Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Bundle:</strong> {service.food.bundle || \"No Food Bundle\"}\n//           </Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Meal Type:</strong> {service.food.mealType || \"N/A\"}\n//           </Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Price:</strong> {service.food.price || \"N/A\"}\n//           </Typography>\n//         </div>\n\n//         {/* Court Section */}\n//         <div style={{ marginTop: 10 }}>\n//           <Typography variant=\"h6\">Court</Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Type:</strong> {service.court.type || \"No Court Type\"}\n//           </Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Time:</strong> {service.court.time || \"No Court Time\"}\n//           </Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Date:</strong> {service.court.date ? new Date(service.court.date).toLocaleDateString() : \"No Court Date\"}\n//           </Typography>\n//         </div>\n\n//         {/* Gym Section */}\n//         <div style={{ marginTop: 10 }}>\n//           <Typography variant=\"h6\">Gym</Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Time:</strong> {service.gym.time || \"No Gym Time\"}\n//           </Typography>\n//           <Typography variant=\"body1\">\n//             <strong>Date:</strong> {service.gym.date ? new Date(service.gym.date).toLocaleDateString() : \"No Gym Date\"}\n//           </Typography>\n//         </div>\n//       </ListItem>\n//     ))\n//   ) : (\n//     <ListItem>\n//       <ListItemText primary=\"No services booked\" />\n//     </ListItem>\n//   )}\n// </List>\n\n//             <Box sx={{ display: \"flex\", justifyContent: \"center\", marginTop: 4 }}>\n//               <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(\"/room-Type\")}>\n//                 Book Another Room\n//               </Button>\n//             </Box>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default ConfirmationPage;","map":{"version":3,"names":[],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/confirmation.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Box, Typography, Button, Grid, Paper, List, ListItem, ListItemText, CircularProgress } from \"@mui/material\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const ConfirmationPage = () => {\r\n//   const [bookingDetails, setBookingDetails] = useState(null);\r\n//   const [services, setServices] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchBookingDetails = async () => {\r\n//       const userId = localStorage.getItem(\"userId\");\r\n//       const bookingId = localStorage.getItem(\"bookingId\");\r\n\r\n//       if (!userId || !bookingId) {\r\n//         alert(\"User or booking ID not found\");\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         // Fetch booking details for the user\r\n//         const response = await fetch(`http://localhost:5000/api/booking/${userId}`);\r\n//         const data = await response.json();\r\n\r\n//         if (response.ok) {\r\n//           const latestBooking = data.bookings[data.bookings.length - 1]; // Get the latest booking\r\n//           setBookingDetails(latestBooking);\r\n\r\n//           // Fetch services for this booking using bookingId\r\n//           const servicesResponse = await fetch(\r\n//             `http://localhost:5000/api/services/${bookingId}`\r\n//           );\r\n          \r\n//           const servicesData = await servicesResponse.json();\r\n//           console.log(\"Services Response:\", servicesData);\r\n\r\n//           if (servicesResponse.ok) {\r\n//             setServices(servicesData.services || []); // Ensure services is an array\r\n//           } else {\r\n//             setError(\"Failed to fetch services\");\r\n//           }\r\n//         } else {\r\n//           setError(\"Failed to fetch booking details\");\r\n//         }\r\n//       } catch (err) {\r\n//         setError(\"Error fetching data\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchBookingDetails();\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\r\n//         <CircularProgress />\r\n//       </Box>\r\n//     );\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <Box sx={{ textAlign: \"center\", marginTop: 3 }}>\r\n//         <Typography variant=\"h6\" color=\"error\">\r\n//           {error}\r\n//         </Typography>\r\n//       </Box>\r\n//     );\r\n//   }\r\n\r\n//   if (!bookingDetails) {\r\n//     return (\r\n//       <Box sx={{ textAlign: \"center\", marginTop: 3 }}>\r\n//         <Typography variant=\"h6\">No booking found.</Typography>\r\n//       </Box>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         minHeight: \"100vh\",\r\n//         backgroundImage: \"url('./background2.jpg')\", // Background image\r\n//         backgroundSize: \"cover\",\r\n//         backgroundPosition: \"center\",\r\n//         backgroundRepeat: \"no-repeat\",\r\n//         padding: 4,\r\n//       }}\r\n//     >\r\n//       <Grid container spacing={2} justifyContent=\"center\">\r\n//         <Grid item xs={12} sm={8} md={6}>\r\n//           <Paper sx={{ padding: 3, backgroundColor: \"rgba(255, 255, 255, 0.8)\" }}>\r\n//             <Typography variant=\"h4\" align=\"center\" sx={{ marginBottom: 2 }}>\r\n//               Booking Confirmation\r\n//             </Typography>\r\n\r\n//             <Typography variant=\"h6\" color=\"primary\" gutterBottom>\r\n//               Booking Details\r\n//             </Typography>\r\n//             <List>\r\n//               <ListItem>\r\n//                 <ListItemText primary=\"Room Type\" secondary={bookingDetails.roomType} />\r\n//               </ListItem>\r\n//               <ListItem>\r\n//                 <ListItemText\r\n//                   primary=\"Check-in Date\"\r\n//                   secondary={new Date(bookingDetails.checkInDate).toLocaleDateString()}\r\n//                 />\r\n//               </ListItem>\r\n//               <ListItem>\r\n//                 <ListItemText\r\n//                   primary=\"Check-out Date\"\r\n//                   secondary={new Date(bookingDetails.checkOutDate).toLocaleDateString()}\r\n//                 />\r\n//               </ListItem>\r\n//               <ListItem>\r\n//                 <ListItemText primary=\"Number of Guests\" secondary={bookingDetails.guests} />\r\n//               </ListItem>\r\n//               <ListItem>\r\n//                 <ListItemText\r\n//                     primary=\"Room Price\"\r\n//                     secondary={`${bookingDetails.totalPrice} EGP`} // Assuming roomPrice is the field holding the price\r\n//                  />\r\n//                 </ListItem>\r\n//             </List>\r\n\r\n//             <Typography variant=\"h6\" color=\"primary\" gutterBottom sx={{ marginTop: 3 }}>\r\n//   Services Booked\r\n// </Typography>\r\n// <List>\r\n//   {services.length ? (\r\n//     services.map((service, index) => (\r\n//       <ListItem key={index}>\r\n//         {/* Food Section */}\r\n//         <div>\r\n//           <Typography variant=\"h6\">Food</Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Bundle:</strong> {service.food.bundle || \"No Food Bundle\"}\r\n//           </Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Meal Type:</strong> {service.food.mealType || \"N/A\"}\r\n//           </Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Price:</strong> {service.food.price || \"N/A\"}\r\n//           </Typography>\r\n//         </div>\r\n\r\n//         {/* Court Section */}\r\n//         <div style={{ marginTop: 10 }}>\r\n//           <Typography variant=\"h6\">Court</Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Type:</strong> {service.court.type || \"No Court Type\"}\r\n//           </Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Time:</strong> {service.court.time || \"No Court Time\"}\r\n//           </Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Date:</strong> {service.court.date ? new Date(service.court.date).toLocaleDateString() : \"No Court Date\"}\r\n//           </Typography>\r\n//         </div>\r\n\r\n//         {/* Gym Section */}\r\n//         <div style={{ marginTop: 10 }}>\r\n//           <Typography variant=\"h6\">Gym</Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Time:</strong> {service.gym.time || \"No Gym Time\"}\r\n//           </Typography>\r\n//           <Typography variant=\"body1\">\r\n//             <strong>Date:</strong> {service.gym.date ? new Date(service.gym.date).toLocaleDateString() : \"No Gym Date\"}\r\n//           </Typography>\r\n//         </div>\r\n//       </ListItem>\r\n//     ))\r\n//   ) : (\r\n//     <ListItem>\r\n//       <ListItemText primary=\"No services booked\" />\r\n//     </ListItem>\r\n//   )}\r\n// </List>\r\n\r\n\r\n//             <Box sx={{ display: \"flex\", justifyContent: \"center\", marginTop: 4 }}>\r\n//               <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(\"/room-Type\")}>\r\n//                 Book Another Room\r\n//               </Button>\r\n//             </Box>\r\n//           </Paper>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default ConfirmationPage;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}