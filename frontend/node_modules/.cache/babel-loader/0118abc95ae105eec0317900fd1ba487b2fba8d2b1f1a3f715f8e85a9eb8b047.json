{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\AppBar.js\";\n// import React from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import Menu from '@mui/material/Menu';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import Container from '@mui/material/Container';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import Tooltip from '@mui/material/Tooltip';\n// import MenuItem from '@mui/material/MenuItem';\n\n// const pages = [\n//     { name: 'Book NOW', link: '/room-Type' },\n//     { name: 'Facilities', link: '/facilities' },\n//     { name: 'Contact Us', link: '/about-us' },\n// ];\n\n// const settings = [\n//     { name: 'Profile', link: '/profile' },\n//     { name: 'Sign In', link: '/signinPage' },\n//     { name: 'Bookings', link: '/bookings' },\n//     { name: 'Logout', link: '/logout' },\n// ];\n\n// function ResponsiveAppBar() {\n//     const [anchorElNav, setAnchorElNav] = React.useState(null);\n//     const [anchorElUser, setAnchorElUser] = React.useState(null);\n//     const navigate = useNavigate();\n\n//     const handleOpenNavMenu = (event) => {\n//         setAnchorElNav(event.currentTarget);\n//     };\n\n//     const handleOpenUserMenu = (event) => {\n//         setAnchorElUser(event.currentTarget);\n//     };\n\n//     const handleCloseNavMenu = () => {\n//         setAnchorElNav(null);\n//     };\n\n//     const handleCloseUserMenu = () => {\n//         setAnchorElUser(null);\n//     };\n\n//     const handleLogout = async () => {\n//         try {\n//             // Clear frontend session data\n//             localStorage.removeItem(\"userId\");  // Clear user ID from localStorage\n//             localStorage.removeItem(\"authToken\");  // If you use an auth token, clear it too\n\n//             // Call backend API to logout if needed (e.g., clear session on the server)\n//             const response = await fetch(\"http://localhost:5000/api/logout\", { method: \"POST\" });\n\n//             if (response.ok) {\n//                 // After successful logout, navigate to sign-in page\n//                 navigate(\"/signinPage\");\n//             } else {\n//                 alert(\"Logout failed. Please try again.\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error during logout:\", error);\n//             alert(\"Error logging out. Please try again.\");\n//         }\n//     };\n\n//     return (\n//         <AppBar position=\"static\" sx={{ backgroundColor: 'black' }}>\n//             <Container maxWidth=\"xl\">\n//                 <Toolbar disableGutters>\n//                     <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n//                         <img\n//                             src=\"/logoBlack.png\"\n//                             alt=\"E-JUST Logo\"\n//                             style={{ padding: '20px 50px', width: '400px', height: '80px', marginRight: '40px' }}\n//                         />\n//                         <Typography\n//                             variant=\"h6\"\n//                             noWrap\n//                             component=\"a\"\n//                             href=\"#\"\n//                             sx={{\n//                                 fontFamily: 'monospace',\n//                                 fontWeight: 700,\n//                                 color: 'white',\n//                                 textDecoration: 'none',\n//                             }}\n//                         >\n//                             E-JUST Accommodations\n//                         </Typography>\n//                     </Box>\n\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n//                         <IconButton\n//                             size=\"large\"\n//                             aria-label=\"open navigation menu\"\n//                             aria-controls=\"menu-appbar\"\n//                             aria-haspopup=\"true\"\n//                             onClick={handleOpenNavMenu}\n//                             color=\"inherit\"\n//                         >\n//                             <MenuIcon />\n//                         </IconButton>\n//                         <Menu\n//                             id=\"menu-appbar\"\n//                             anchorEl={anchorElNav}\n//                             anchorOrigin={{\n//                                 vertical: 'bottom',\n//                                 horizontal: 'left',\n//                             }}\n//                             keepMounted\n//                             transformOrigin={{\n//                                 vertical: 'top',\n//                                 horizontal: 'left',\n//                             }}\n//                             open={Boolean(anchorElNav)}\n//                             onClose={handleCloseNavMenu}\n//                         >\n//                             {pages.map((page) => (\n//                                 <MenuItem key={page.name} onClick={handleCloseNavMenu}>\n//                                     <Typography textAlign=\"center\">\n//                                         <Link to={page.link} style={{ textDecoration: 'none', color: 'grey' }}>\n//                                             {page.name}\n//                                         </Link>\n//                                     </Typography>\n//                                 </MenuItem>\n//                             ))}\n//                         </Menu>\n//                     </Box>\n\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n//                         {pages.map((page) => (\n//                             <Button\n//                                 key={page.name}\n//                                 component={Link}\n//                                 to={page.link}\n//                                 sx={{ my: 2, color: 'white', display: 'block', textDecoration: 'none' }}\n//                             >\n//                                 {page.name}\n//                             </Button>\n//                         ))}\n//                     </Box>\n\n//                     <Box sx={{ flexGrow: 0 }}>\n//                         <Tooltip title=\"Open settings\">\n//                             <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n//                                 <Avatar alt=\"User Avatar\" src=\"/static/images/avatar/2.jpg\" />\n//                             </IconButton>\n//                         </Tooltip>\n//                         <Menu\n//                             sx={{ mt: '45px' }}\n//                             id=\"menu-appbar\"\n//                             anchorEl={anchorElUser}\n//                             anchorOrigin={{\n//                                 vertical: 'top',\n//                                 horizontal: 'right',\n//                             }}\n//                             keepMounted\n//                             transformOrigin={{\n//                                 vertical: 'top',\n//                                 horizontal: 'right',\n//                             }}\n//                             open={Boolean(anchorElUser)}\n//                             onClose={handleCloseUserMenu}\n//                         >\n//                             {settings.map((setting) => (\n//                                 <MenuItem\n//                                     key={setting.name}\n//                                     onClick={setting.name === 'Logout' ? handleLogout : handleCloseUserMenu}\n//                                 >\n//                                     <Typography textAlign=\"center\">\n//                                         {setting.name === 'Logout' ? (\n//                                             <span style={{ cursor: 'pointer' }}>Logout</span>\n//                                         ) : (\n//                                             <Link to={setting.link} style={{ textDecoration: 'none', color: 'grey' }}>\n//                                                 {setting.name}\n//                                             </Link>\n//                                         )}\n//                                     </Typography>\n//                                 </MenuItem>\n//                             ))}\n//                         </Menu>\n//                     </Box>\n//                 </Toolbar>\n//             </Container>\n//         </AppBar>\n//     );\n// }\n\n// export default ResponsiveAppBar;\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Import React Router's Link component\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { withRouter } from 'react-router-dom'; // Import withRouter\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = [{\n  name: 'Book NOW',\n  link: '/room-Type'\n}, {\n  name: 'Facilities',\n  link: '/facilities'\n}, {\n  name: 'Contact Us',\n  link: '/about-us'\n}];\nconst settings = [{\n  name: 'Profile',\n  link: '/profile'\n}, {\n  name: 'Sign In',\n  link: '/signinPage'\n}, {\n  name: 'Bookings',\n  link: '/bookings'\n}, {\n  name: 'Logout',\n  link: '/logout'\n}];\nclass ResponsiveAppBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOpenNavMenu = event => {\n      this.setState({\n        anchorElNav: event.currentTarget\n      });\n    };\n    this.handleOpenUserMenu = event => {\n      this.setState({\n        anchorElUser: event.currentTarget\n      });\n    };\n    this.handleCloseNavMenu = () => {\n      this.setState({\n        anchorElNav: null\n      });\n    };\n    this.handleCloseUserMenu = () => {\n      this.setState({\n        anchorElUser: null\n      });\n    };\n    this.handleLogout = () => {\n      // Logic to clear user session (e.g., localStorage.clear())\n      // Redirect to sign-in page\n      this.props.history.push('/signinPage');\n    };\n    this.state = {\n      anchorElNav: null,\n      anchorElUser: null\n    };\n  }\n  render() {\n    const {\n      anchorElNav,\n      anchorElUser\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mr: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/logoBlack.png\",\n              alt: \"E-JUST Logo\",\n              style: {\n                padding: '20px 50px',\n                width: '400px',\n                height: '80px',\n                marginRight: '40px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              noWrap: true,\n              component: \"a\",\n              href: \"#\",\n              sx: {\n                fontFamily: 'monospace',\n                fontWeight: 700,\n                color: 'white',\n                textDecoration: 'none'\n              },\n              children: \"E-JUST Accommodations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"open navigation menu\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: this.handleOpenNavMenu,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorElNav,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              open: Boolean(anchorElNav),\n              onClose: this.handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: 'block',\n                  md: 'none'\n                }\n              },\n              children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: this.handleCloseNavMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: page.link,\n                    style: {\n                      textDecoration: 'none',\n                      color: 'grey'\n                    },\n                    children: page.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 41\n                }, this)\n              }, page.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: page.link,\n              sx: {\n                my: 2,\n                color: 'white',\n                display: 'block',\n                textDecoration: 'none'\n              },\n              children: page.name\n            }, page.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: this.handleOpenUserMenu,\n                sx: {\n                  p: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"User Avatar\",\n                  src: \"/static/images/avatar/2.jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: '45px'\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorElUser,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              open: Boolean(anchorElUser),\n              onClose: this.handleCloseUserMenu,\n              children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: setting.name === 'Logout' ? this.handleLogout : this.handleCloseUserMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: setting.link,\n                    style: {\n                      textDecoration: 'none',\n                      color: 'grey'\n                    },\n                    children: setting.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 41\n                }, this)\n              }, setting.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Wrap the component with `withRouter` to have access to `this.props.history`\nexport default _c = withRouter(ResponsiveAppBar);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","Link","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","withRouter","jsxDEV","_jsxDEV","pages","name","link","settings","ResponsiveAppBar","constructor","props","handleOpenNavMenu","event","setState","anchorElNav","currentTarget","handleOpenUserMenu","anchorElUser","handleCloseNavMenu","handleCloseUserMenu","handleLogout","history","push","state","render","position","sx","backgroundColor","children","maxWidth","disableGutters","display","alignItems","mr","src","alt","style","padding","width","height","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","variant","noWrap","component","href","fontFamily","fontWeight","color","textDecoration","flexGrow","xs","md","size","onClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","textAlign","to","my","title","p","mt","setting","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/AppBar.js"],"sourcesContent":["// import React from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import AppBar from '@mui/material/AppBar';\r\n// import Box from '@mui/material/Box';\r\n// import Toolbar from '@mui/material/Toolbar';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import Typography from '@mui/material/Typography';\r\n// import Menu from '@mui/material/Menu';\r\n// import MenuIcon from '@mui/icons-material/Menu';\r\n// import Container from '@mui/material/Container';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import Tooltip from '@mui/material/Tooltip';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n\r\n// const pages = [\r\n//     { name: 'Book NOW', link: '/room-Type' },\r\n//     { name: 'Facilities', link: '/facilities' },\r\n//     { name: 'Contact Us', link: '/about-us' },\r\n// ];\r\n\r\n// const settings = [\r\n//     { name: 'Profile', link: '/profile' },\r\n//     { name: 'Sign In', link: '/signinPage' },\r\n//     { name: 'Bookings', link: '/bookings' },\r\n//     { name: 'Logout', link: '/logout' },\r\n// ];\r\n\r\n// function ResponsiveAppBar() {\r\n//     const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n//     const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleOpenNavMenu = (event) => {\r\n//         setAnchorElNav(event.currentTarget);\r\n//     };\r\n\r\n//     const handleOpenUserMenu = (event) => {\r\n//         setAnchorElUser(event.currentTarget);\r\n//     };\r\n\r\n//     const handleCloseNavMenu = () => {\r\n//         setAnchorElNav(null);\r\n//     };\r\n\r\n//     const handleCloseUserMenu = () => {\r\n//         setAnchorElUser(null);\r\n//     };\r\n\r\n//     const handleLogout = async () => {\r\n//         try {\r\n//             // Clear frontend session data\r\n//             localStorage.removeItem(\"userId\");  // Clear user ID from localStorage\r\n//             localStorage.removeItem(\"authToken\");  // If you use an auth token, clear it too\r\n\r\n//             // Call backend API to logout if needed (e.g., clear session on the server)\r\n//             const response = await fetch(\"http://localhost:5000/api/logout\", { method: \"POST\" });\r\n\r\n//             if (response.ok) {\r\n//                 // After successful logout, navigate to sign-in page\r\n//                 navigate(\"/signinPage\");\r\n//             } else {\r\n//                 alert(\"Logout failed. Please try again.\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Error during logout:\", error);\r\n//             alert(\"Error logging out. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <AppBar position=\"static\" sx={{ backgroundColor: 'black' }}>\r\n//             <Container maxWidth=\"xl\">\r\n//                 <Toolbar disableGutters>\r\n//                     <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\r\n//                         <img\r\n//                             src=\"/logoBlack.png\"\r\n//                             alt=\"E-JUST Logo\"\r\n//                             style={{ padding: '20px 50px', width: '400px', height: '80px', marginRight: '40px' }}\r\n//                         />\r\n//                         <Typography\r\n//                             variant=\"h6\"\r\n//                             noWrap\r\n//                             component=\"a\"\r\n//                             href=\"#\"\r\n//                             sx={{\r\n//                                 fontFamily: 'monospace',\r\n//                                 fontWeight: 700,\r\n//                                 color: 'white',\r\n//                                 textDecoration: 'none',\r\n//                             }}\r\n//                         >\r\n//                             E-JUST Accommodations\r\n//                         </Typography>\r\n//                     </Box>\r\n\r\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n//                         <IconButton\r\n//                             size=\"large\"\r\n//                             aria-label=\"open navigation menu\"\r\n//                             aria-controls=\"menu-appbar\"\r\n//                             aria-haspopup=\"true\"\r\n//                             onClick={handleOpenNavMenu}\r\n//                             color=\"inherit\"\r\n//                         >\r\n//                             <MenuIcon />\r\n//                         </IconButton>\r\n//                         <Menu\r\n//                             id=\"menu-appbar\"\r\n//                             anchorEl={anchorElNav}\r\n//                             anchorOrigin={{\r\n//                                 vertical: 'bottom',\r\n//                                 horizontal: 'left',\r\n//                             }}\r\n//                             keepMounted\r\n//                             transformOrigin={{\r\n//                                 vertical: 'top',\r\n//                                 horizontal: 'left',\r\n//                             }}\r\n//                             open={Boolean(anchorElNav)}\r\n//                             onClose={handleCloseNavMenu}\r\n//                         >\r\n//                             {pages.map((page) => (\r\n//                                 <MenuItem key={page.name} onClick={handleCloseNavMenu}>\r\n//                                     <Typography textAlign=\"center\">\r\n//                                         <Link to={page.link} style={{ textDecoration: 'none', color: 'grey' }}>\r\n//                                             {page.name}\r\n//                                         </Link>\r\n//                                     </Typography>\r\n//                                 </MenuItem>\r\n//                             ))}\r\n//                         </Menu>\r\n//                     </Box>\r\n\r\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n//                         {pages.map((page) => (\r\n//                             <Button\r\n//                                 key={page.name}\r\n//                                 component={Link}\r\n//                                 to={page.link}\r\n//                                 sx={{ my: 2, color: 'white', display: 'block', textDecoration: 'none' }}\r\n//                             >\r\n//                                 {page.name}\r\n//                             </Button>\r\n//                         ))}\r\n//                     </Box>\r\n\r\n//                     <Box sx={{ flexGrow: 0 }}>\r\n//                         <Tooltip title=\"Open settings\">\r\n//                             <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n//                                 <Avatar alt=\"User Avatar\" src=\"/static/images/avatar/2.jpg\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                         <Menu\r\n//                             sx={{ mt: '45px' }}\r\n//                             id=\"menu-appbar\"\r\n//                             anchorEl={anchorElUser}\r\n//                             anchorOrigin={{\r\n//                                 vertical: 'top',\r\n//                                 horizontal: 'right',\r\n//                             }}\r\n//                             keepMounted\r\n//                             transformOrigin={{\r\n//                                 vertical: 'top',\r\n//                                 horizontal: 'right',\r\n//                             }}\r\n//                             open={Boolean(anchorElUser)}\r\n//                             onClose={handleCloseUserMenu}\r\n//                         >\r\n//                             {settings.map((setting) => (\r\n//                                 <MenuItem\r\n//                                     key={setting.name}\r\n//                                     onClick={setting.name === 'Logout' ? handleLogout : handleCloseUserMenu}\r\n//                                 >\r\n//                                     <Typography textAlign=\"center\">\r\n//                                         {setting.name === 'Logout' ? (\r\n//                                             <span style={{ cursor: 'pointer' }}>Logout</span>\r\n//                                         ) : (\r\n//                                             <Link to={setting.link} style={{ textDecoration: 'none', color: 'grey' }}>\r\n//                                                 {setting.name}\r\n//                                             </Link>\r\n//                                         )}\r\n//                                     </Typography>\r\n//                                 </MenuItem>\r\n//                             ))}\r\n//                         </Menu>\r\n//                     </Box>\r\n//                 </Toolbar>\r\n//             </Container>\r\n//         </AppBar>\r\n//     );\r\n// }\r\n\r\n// export default ResponsiveAppBar;\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'; // Import React Router's Link component\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { withRouter } from 'react-router-dom'; // Import withRouter\r\n\r\nconst pages = [\r\n    { name: 'Book NOW', link: '/room-Type' },\r\n    { name: 'Facilities', link: '/facilities' },\r\n    { name: 'Contact Us', link: '/about-us' },\r\n];\r\n\r\nconst settings = [\r\n    { name: 'Profile', link: '/profile' },\r\n    { name: 'Sign In', link: '/signinPage' },\r\n    { name: 'Bookings', link: '/bookings' },\r\n    { name: 'Logout', link: '/logout' },\r\n];\r\n\r\nclass ResponsiveAppBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorElNav: null,\r\n            anchorElUser: null,\r\n        };\r\n    }\r\n\r\n    handleOpenNavMenu = (event) => {\r\n        this.setState({ anchorElNav: event.currentTarget });\r\n    };\r\n\r\n    handleOpenUserMenu = (event) => {\r\n        this.setState({ anchorElUser: event.currentTarget });\r\n    };\r\n\r\n    handleCloseNavMenu = () => {\r\n        this.setState({ anchorElNav: null });\r\n    };\r\n\r\n    handleCloseUserMenu = () => {\r\n        this.setState({ anchorElUser: null });\r\n    };\r\n\r\n    handleLogout = () => {\r\n        // Logic to clear user session (e.g., localStorage.clear())\r\n        // Redirect to sign-in page\r\n        this.props.history.push('/signinPage');\r\n    };\r\n\r\n    render() {\r\n        const { anchorElNav, anchorElUser } = this.state;\r\n\r\n        return (\r\n            <AppBar position=\"static\" sx={{ backgroundColor: 'black' }}>\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar disableGutters>\r\n                        {/* Add Logo */}\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\r\n                            <img\r\n                                src=\"/logoBlack.png\"\r\n                                alt=\"E-JUST Logo\"\r\n                                style={{\r\n                                    padding: '20px 50px',\r\n                                    width: '400px',\r\n                                    height: '80px',\r\n                                    marginRight: '40px',\r\n                                }}\r\n                            />\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                noWrap\r\n                                component=\"a\"\r\n                                href=\"#\"\r\n                                sx={{\r\n                                    fontFamily: 'monospace',\r\n                                    fontWeight: 700,\r\n                                    color: 'white',\r\n                                    textDecoration: 'none',\r\n                                }}\r\n                            >\r\n                                E-JUST Accommodations\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        {/* Mobile Menu */}\r\n                        <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                aria-label=\"open navigation menu\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleOpenNavMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElNav}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'left',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left',\r\n                                }}\r\n                                open={Boolean(anchorElNav)}\r\n                                onClose={this.handleCloseNavMenu}\r\n                                sx={{ display: { xs: 'block', md: 'none' } }}\r\n                            >\r\n                                {pages.map((page) => (\r\n                                    <MenuItem key={page.name} onClick={this.handleCloseNavMenu}>\r\n                                        <Typography textAlign=\"center\">\r\n                                            <Link to={page.link} style={{ textDecoration: 'none', color: 'grey' }}>\r\n                                                {page.name}\r\n                                            </Link>\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </Box>\r\n\r\n                        {/* Desktop Menu */}\r\n                        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                            {pages.map((page) => (\r\n                                <Button\r\n                                    key={page.name}\r\n                                    component={Link}\r\n                                    to={page.link}\r\n                                    sx={{ my: 2, color: 'white', display: 'block', textDecoration: 'none' }}\r\n                                >\r\n                                    {page.name}\r\n                                </Button>\r\n                            ))}\r\n                        </Box>\r\n\r\n                        {/* User Menu */}\r\n                        <Box sx={{ flexGrow: 0 }}>\r\n                            <Tooltip title=\"Open settings\">\r\n                                <IconButton onClick={this.handleOpenUserMenu} sx={{ p: 0 }}>\r\n                                    <Avatar alt=\"User Avatar\" src=\"/static/images/avatar/2.jpg\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Menu\r\n                                sx={{ mt: '45px' }}\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElUser}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={Boolean(anchorElUser)}\r\n                                onClose={this.handleCloseUserMenu}\r\n                            >\r\n                                {settings.map((setting) => (\r\n                                    <MenuItem\r\n                                        key={setting.name}\r\n                                        onClick={setting.name === 'Logout' ? this.handleLogout : this.handleCloseUserMenu}\r\n                                    >\r\n                                        <Typography textAlign=\"center\">\r\n                                            <Link\r\n                                                to={setting.link}\r\n                                                style={{ textDecoration: 'none', color: 'grey' }}\r\n                                            >\r\n                                                {setting.name}\r\n                                            </Link>\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </Box>\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n\r\n// Wrap the component with `withRouter` to have access to `this.props.history`\r\nexport default withRouter(ResponsiveAppBar);\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}