{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\signin.js\",\n  _s = $RefreshSig$();\n// src/components/signin.js\nimport * as React from 'react';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { SignInPage } from '@toolpad/core/SignInPage';\nimport { useTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providers = [{\n  id: 'credentials',\n  name: 'Credentials'\n}];\nconst BRANDING = {\n  logo: /*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"./ejustLogoSignin.png\",\n    alt: \"E-JUST logo\",\n    style: {\n      height: 24\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this),\n  title: 'Sign in to E-JUST Accommodation'\n};\nexport default function BrandingSignInPage() {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const signIn = async (email, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Unknown error occurred\");\n      }\n      const data = await response.json();\n      console.log(\"Login successful:\", data);\n      navigate(\"/room-Type\"); // Redirect to the roomtype page\n    } catch (error) {\n      console.error(\"Error during login:\", error.message);\n      alert(error.message || \"Login failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    branding: BRANDING,\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(SignInPage, {\n      signIn: async (provider, email, password) => {\n        if (!email || !password) {\n          alert(\"Email and password are required\");\n          return;\n        }\n        await signIn(email, password);\n      },\n      providers: providers,\n      slotProps: {\n        emailField: {\n          autoFocus: false\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(BrandingSignInPage, \"M3QAqxJ4kyJCV5lEOFanVMyrDhk=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = BrandingSignInPage;\nvar _c;\n$RefreshReg$(_c, \"BrandingSignInPage\");","map":{"version":3,"names":["React","AppProvider","SignInPage","useTheme","useNavigate","jsxDEV","_jsxDEV","providers","id","name","BRANDING","logo","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","title","BrandingSignInPage","_s","theme","navigate","signIn","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","console","log","error","alert","branding","children","provider","slotProps","emailField","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/signin.js"],"sourcesContent":["// src/components/signin.js\r\nimport * as React from 'react';\r\nimport { AppProvider } from '@toolpad/core/AppProvider';\r\nimport { SignInPage } from '@toolpad/core/SignInPage';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst providers = [{ id: 'credentials', name: 'Credentials' }];\r\n\r\nconst BRANDING = {\r\n    logo: (\r\n        <img\r\n            src=\"./ejustLogoSignin.png\"\r\n            alt=\"E-JUST logo\"\r\n            style={{ height: 24 }}\r\n        />\r\n    ),\r\n    title: 'Sign in to E-JUST Accommodation',\r\n};\r\n\r\nexport default function BrandingSignInPage() {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n\r\n    const signIn = async (email, password) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || \"Unknown error occurred\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Login successful:\", data);\r\n\r\n            navigate(\"/room-Type\"); // Redirect to the roomtype page\r\n        } catch (error) {\r\n            console.error(\"Error during login:\", error.message);\r\n            alert(error.message || \"Login failed. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AppProvider branding={BRANDING} theme={theme}>\r\n            <SignInPage\r\n                signIn={async (provider, email, password) => {\r\n                    if (!email || !password) {\r\n                        alert(\"Email and password are required\");\r\n                        return;\r\n                    }\r\n                    await signIn(email, password);\r\n                }}\r\n                providers={providers}\r\n                slotProps={{\r\n                    emailField: { autoFocus: false },\r\n                }}\r\n            />\r\n        </AppProvider>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAG,CAAC;EAAEC,EAAE,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAc,CAAC,CAAC;AAE9D,MAAMC,QAAQ,GAAG;EACbC,IAAI,eACAL,OAAA;IACIM,GAAG,EAAC,uBAAuB;IAC3BC,GAAG,EAAC,aAAa;IACjBC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CACJ;EACDC,KAAK,EAAE;AACX,CAAC;AAED,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAMC,KAAK,GAAGpB,QAAQ,CAAC,CAAC;EACxB,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAMqB,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC5C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,wBAAwB,CAAC;MAClE;MAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;MAEtChB,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACJ,OAAO,CAAC;MACnDK,KAAK,CAACD,KAAK,CAACJ,OAAO,IAAI,iCAAiC,CAAC;IAC7D;EACJ,CAAC;EAED,oBACIjC,OAAA,CAACL,WAAW;IAAC4C,QAAQ,EAAEnC,QAAS;IAACa,KAAK,EAAEA,KAAM;IAAAuB,QAAA,eAC1CxC,OAAA,CAACJ,UAAU;MACPuB,MAAM,EAAE,MAAAA,CAAOsB,QAAQ,EAAErB,KAAK,EAAEC,QAAQ,KAAK;QACzC,IAAI,CAACD,KAAK,IAAI,CAACC,QAAQ,EAAE;UACrBiB,KAAK,CAAC,iCAAiC,CAAC;UACxC;QACJ;QACA,MAAMnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACjC,CAAE;MACFpB,SAAS,EAAEA,SAAU;MACrByC,SAAS,EAAE;QACPC,UAAU,EAAE;UAAEC,SAAS,EAAE;QAAM;MACnC;IAAE;MAAAlC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEtB;AAACG,EAAA,CA9CuBD,kBAAkB;EAAA,QACxBlB,QAAQ,EACLC,WAAW;AAAA;AAAA+C,EAAA,GAFR9B,kBAAkB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}