{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\AppBar.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import Menu from '@mui/material/Menu';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import Container from '@mui/material/Container';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import Tooltip from '@mui/material/Tooltip';\n// import MenuItem from '@mui/material/MenuItem';\n\n// const pages = [\n//     { name: 'Book NOW', link: '/room-Type' },\n//     { name: 'Facilities', link: '/facilities' },\n//     { name: 'Contact Us', link: '/about-us' },\n// ];\n\n// const settings = [\n//     { name: 'Profile', link: '/profile' },\n//     { name: 'Sign In', link: '/signinPage' },\n//     { name: 'Bookings', link: '/bookings' },\n//     { name: 'Logout', link: '/logout' },\n// ];\n\n// function ResponsiveAppBar() {\n//     const [anchorElNav, setAnchorElNav] = React.useState(null);\n//     const [anchorElUser, setAnchorElUser] = React.useState(null);\n//     const navigate = useNavigate();\n\n//     const handleOpenNavMenu = (event) => {\n//         setAnchorElNav(event.currentTarget);\n//     };\n\n//     const handleOpenUserMenu = (event) => {\n//         setAnchorElUser(event.currentTarget);\n//     };\n\n//     const handleCloseNavMenu = () => {\n//         setAnchorElNav(null);\n//     };\n\n//     const handleCloseUserMenu = () => {\n//         setAnchorElUser(null);\n//     };\n\n//     const handleLogout = async () => {\n//         try {\n//             // Clear frontend session data\n//             localStorage.removeItem(\"userId\");  // Clear user ID from localStorage\n//             localStorage.removeItem(\"authToken\");  // If you use an auth token, clear it too\n\n//             // Call backend API to logout if needed (e.g., clear session on the server)\n//             const response = await fetch(\"http://localhost:5000/api/logout\", { method: \"POST\" });\n\n//             if (response.ok) {\n//                 // After successful logout, navigate to sign-in page\n//                 navigate(\"/signinPage\");\n//             } else {\n//                 alert(\"Logout failed. Please try again.\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error during logout:\", error);\n//             alert(\"Error logging out. Please try again.\");\n//         }\n//     };\n\n//     return (\n//         <AppBar position=\"static\" sx={{ backgroundColor: 'black' }}>\n//             <Container maxWidth=\"xl\">\n//                 <Toolbar disableGutters>\n//                     <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n//                         <img\n//                             src=\"/logoBlack.png\"\n//                             alt=\"E-JUST Logo\"\n//                             style={{ padding: '20px 50px', width: '400px', height: '80px', marginRight: '40px' }}\n//                         />\n//                         <Typography\n//                             variant=\"h6\"\n//                             noWrap\n//                             component=\"a\"\n//                             href=\"#\"\n//                             sx={{\n//                                 fontFamily: 'monospace',\n//                                 fontWeight: 700,\n//                                 color: 'white',\n//                                 textDecoration: 'none',\n//                             }}\n//                         >\n//                             E-JUST Accommodations\n//                         </Typography>\n//                     </Box>\n\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n//                         <IconButton\n//                             size=\"large\"\n//                             aria-label=\"open navigation menu\"\n//                             aria-controls=\"menu-appbar\"\n//                             aria-haspopup=\"true\"\n//                             onClick={handleOpenNavMenu}\n//                             color=\"inherit\"\n//                         >\n//                             <MenuIcon />\n//                         </IconButton>\n//                         <Menu\n//                             id=\"menu-appbar\"\n//                             anchorEl={anchorElNav}\n//                             anchorOrigin={{\n//                                 vertical: 'bottom',\n//                                 horizontal: 'left',\n//                             }}\n//                             keepMounted\n//                             transformOrigin={{\n//                                 vertical: 'top',\n//                                 horizontal: 'left',\n//                             }}\n//                             open={Boolean(anchorElNav)}\n//                             onClose={handleCloseNavMenu}\n//                         >\n//                             {pages.map((page) => (\n//                                 <MenuItem key={page.name} onClick={handleCloseNavMenu}>\n//                                     <Typography textAlign=\"center\">\n//                                         <Link to={page.link} style={{ textDecoration: 'none', color: 'grey' }}>\n//                                             {page.name}\n//                                         </Link>\n//                                     </Typography>\n//                                 </MenuItem>\n//                             ))}\n//                         </Menu>\n//                     </Box>\n\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n//                         {pages.map((page) => (\n//                             <Button\n//                                 key={page.name}\n//                                 component={Link}\n//                                 to={page.link}\n//                                 sx={{ my: 2, color: 'white', display: 'block', textDecoration: 'none' }}\n//                             >\n//                                 {page.name}\n//                             </Button>\n//                         ))}\n//                     </Box>\n\n//                     <Box sx={{ flexGrow: 0 }}>\n//                         <Tooltip title=\"Open settings\">\n//                             <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n//                                 <Avatar alt=\"User Avatar\" src=\"/static/images/avatar/2.jpg\" />\n//                             </IconButton>\n//                         </Tooltip>\n//                         <Menu\n//                             sx={{ mt: '45px' }}\n//                             id=\"menu-appbar\"\n//                             anchorEl={anchorElUser}\n//                             anchorOrigin={{\n//                                 vertical: 'top',\n//                                 horizontal: 'right',\n//                             }}\n//                             keepMounted\n//                             transformOrigin={{\n//                                 vertical: 'top',\n//                                 horizontal: 'right',\n//                             }}\n//                             open={Boolean(anchorElUser)}\n//                             onClose={handleCloseUserMenu}\n//                         >\n//                             {settings.map((setting) => (\n//                                 <MenuItem\n//                                     key={setting.name}\n//                                     onClick={setting.name === 'Logout' ? handleLogout : handleCloseUserMenu}\n//                                 >\n//                                     <Typography textAlign=\"center\">\n//                                         {setting.name === 'Logout' ? (\n//                                             <span style={{ cursor: 'pointer' }}>Logout</span>\n//                                         ) : (\n//                                             <Link to={setting.link} style={{ textDecoration: 'none', color: 'grey' }}>\n//                                                 {setting.name}\n//                                             </Link>\n//                                         )}\n//                                     </Typography>\n//                                 </MenuItem>\n//                             ))}\n//                         </Menu>\n//                     </Box>\n//                 </Toolbar>\n//             </Container>\n//         </AppBar>\n//     );\n// }\n\n// export default ResponsiveAppBar;\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = [{\n  name: 'Book NOW',\n  link: '/room-Type'\n}, {\n  name: 'Facilities',\n  link: '/facilities'\n}, {\n  name: 'Contact Us',\n  link: '/about-us'\n}];\nconst settings = [{\n  name: 'Profile',\n  link: '/profile'\n}, {\n  name: 'Sign In',\n  link: '/signinPage'\n}, {\n  name: 'Bookings',\n  link: '/bookings'\n}, {\n  name: 'Logout',\n  link: '/signinPage'\n} // Will handle logout functionality\n];\nconst ResponsiveAppBar = () => {\n  _s();\n  const [anchorElNav, setAnchorElNav] = useState(null);\n  const [anchorElUser, setAnchorElUser] = useState(null);\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  const handleOpenNavMenu = event => setAnchorElNav(event.currentTarget);\n  const handleOpenUserMenu = event => setAnchorElUser(event.currentTarget);\n  const handleCloseNavMenu = () => setAnchorElNav(null);\n  const handleCloseUserMenu = () => setAnchorElUser(null);\n  const handleLogout = () => {\n    // Logic to clear user session (e.g., localStorage.clear())\n    navigate('/signinPage'); // Redirect to the signin page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    sx: {\n      backgroundColor: 'black'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logoBlack.png\",\n            alt: \"E-JUST Logo\",\n            style: {\n              padding: '20px 50px',\n              width: '400px',\n              height: '80px',\n              marginRight: '40px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"a\",\n            href: \"#\",\n            sx: {\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              color: 'white',\n              textDecoration: 'none'\n            },\n            children: \"E-JUST Accommodations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            \"aria-label\": \"open navigation menu\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleOpenNavMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorElNav,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left'\n            },\n            open: Boolean(anchorElNav),\n            onClose: handleCloseNavMenu,\n            sx: {\n              display: {\n                xs: 'block',\n                md: 'none'\n              }\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleCloseNavMenu,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: page.link,\n                  style: {\n                    textDecoration: 'none',\n                    color: 'grey'\n                  },\n                  children: page.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 37\n              }, this)\n            }, page.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: page.link,\n            sx: {\n              my: 2,\n              color: 'white',\n              display: 'block',\n              textDecoration: 'none'\n            },\n            children: page.name\n          }, page.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Open settings\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleOpenUserMenu,\n              sx: {\n                p: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"User Avatar\",\n                src: \"/static/images/avatar/2.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            sx: {\n              mt: '45px'\n            },\n            id: \"menu-appbar\",\n            anchorEl: anchorElUser,\n            anchorOrigin: {\n              vertical: 'top',\n              horizontal: 'right'\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'right'\n            },\n            open: Boolean(anchorElUser),\n            onClose: handleCloseUserMenu,\n            children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: setting.name === 'Logout' ? handleLogout : handleCloseUserMenu,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: setting.link,\n                  style: {\n                    textDecoration: 'none',\n                    color: 'grey'\n                  },\n                  children: setting.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 37\n              }, this)\n            }, setting.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n};\n_s(ResponsiveAppBar, \"wvc2gIAIYVLMHRvTRZdVfT5iRQg=\", false, function () {\n  return [useNavigate];\n});\n_c = ResponsiveAppBar;\nexport default ResponsiveAppBar;\nvar _c;\n$RefreshReg$(_c, \"ResponsiveAppBar\");","map":{"version":3,"names":["React","useState","Link","useNavigate","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","jsxDEV","_jsxDEV","pages","name","link","settings","ResponsiveAppBar","_s","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","navigate","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","handleLogout","position","sx","backgroundColor","children","maxWidth","disableGutters","display","alignItems","mr","src","alt","style","padding","width","height","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","variant","noWrap","component","href","fontFamily","fontWeight","color","textDecoration","flexGrow","xs","md","size","onClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","textAlign","to","my","title","p","mt","setting","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/AppBar.js"],"sourcesContent":["// import React from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import AppBar from '@mui/material/AppBar';\r\n// import Box from '@mui/material/Box';\r\n// import Toolbar from '@mui/material/Toolbar';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import Typography from '@mui/material/Typography';\r\n// import Menu from '@mui/material/Menu';\r\n// import MenuIcon from '@mui/icons-material/Menu';\r\n// import Container from '@mui/material/Container';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import Tooltip from '@mui/material/Tooltip';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n\r\n// const pages = [\r\n//     { name: 'Book NOW', link: '/room-Type' },\r\n//     { name: 'Facilities', link: '/facilities' },\r\n//     { name: 'Contact Us', link: '/about-us' },\r\n// ];\r\n\r\n// const settings = [\r\n//     { name: 'Profile', link: '/profile' },\r\n//     { name: 'Sign In', link: '/signinPage' },\r\n//     { name: 'Bookings', link: '/bookings' },\r\n//     { name: 'Logout', link: '/logout' },\r\n// ];\r\n\r\n// function ResponsiveAppBar() {\r\n//     const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n//     const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleOpenNavMenu = (event) => {\r\n//         setAnchorElNav(event.currentTarget);\r\n//     };\r\n\r\n//     const handleOpenUserMenu = (event) => {\r\n//         setAnchorElUser(event.currentTarget);\r\n//     };\r\n\r\n//     const handleCloseNavMenu = () => {\r\n//         setAnchorElNav(null);\r\n//     };\r\n\r\n//     const handleCloseUserMenu = () => {\r\n//         setAnchorElUser(null);\r\n//     };\r\n\r\n//     const handleLogout = async () => {\r\n//         try {\r\n//             // Clear frontend session data\r\n//             localStorage.removeItem(\"userId\");  // Clear user ID from localStorage\r\n//             localStorage.removeItem(\"authToken\");  // If you use an auth token, clear it too\r\n\r\n//             // Call backend API to logout if needed (e.g., clear session on the server)\r\n//             const response = await fetch(\"http://localhost:5000/api/logout\", { method: \"POST\" });\r\n\r\n//             if (response.ok) {\r\n//                 // After successful logout, navigate to sign-in page\r\n//                 navigate(\"/signinPage\");\r\n//             } else {\r\n//                 alert(\"Logout failed. Please try again.\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Error during logout:\", error);\r\n//             alert(\"Error logging out. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <AppBar position=\"static\" sx={{ backgroundColor: 'black' }}>\r\n//             <Container maxWidth=\"xl\">\r\n//                 <Toolbar disableGutters>\r\n//                     <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\r\n//                         <img\r\n//                             src=\"/logoBlack.png\"\r\n//                             alt=\"E-JUST Logo\"\r\n//                             style={{ padding: '20px 50px', width: '400px', height: '80px', marginRight: '40px' }}\r\n//                         />\r\n//                         <Typography\r\n//                             variant=\"h6\"\r\n//                             noWrap\r\n//                             component=\"a\"\r\n//                             href=\"#\"\r\n//                             sx={{\r\n//                                 fontFamily: 'monospace',\r\n//                                 fontWeight: 700,\r\n//                                 color: 'white',\r\n//                                 textDecoration: 'none',\r\n//                             }}\r\n//                         >\r\n//                             E-JUST Accommodations\r\n//                         </Typography>\r\n//                     </Box>\r\n\r\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n//                         <IconButton\r\n//                             size=\"large\"\r\n//                             aria-label=\"open navigation menu\"\r\n//                             aria-controls=\"menu-appbar\"\r\n//                             aria-haspopup=\"true\"\r\n//                             onClick={handleOpenNavMenu}\r\n//                             color=\"inherit\"\r\n//                         >\r\n//                             <MenuIcon />\r\n//                         </IconButton>\r\n//                         <Menu\r\n//                             id=\"menu-appbar\"\r\n//                             anchorEl={anchorElNav}\r\n//                             anchorOrigin={{\r\n//                                 vertical: 'bottom',\r\n//                                 horizontal: 'left',\r\n//                             }}\r\n//                             keepMounted\r\n//                             transformOrigin={{\r\n//                                 vertical: 'top',\r\n//                                 horizontal: 'left',\r\n//                             }}\r\n//                             open={Boolean(anchorElNav)}\r\n//                             onClose={handleCloseNavMenu}\r\n//                         >\r\n//                             {pages.map((page) => (\r\n//                                 <MenuItem key={page.name} onClick={handleCloseNavMenu}>\r\n//                                     <Typography textAlign=\"center\">\r\n//                                         <Link to={page.link} style={{ textDecoration: 'none', color: 'grey' }}>\r\n//                                             {page.name}\r\n//                                         </Link>\r\n//                                     </Typography>\r\n//                                 </MenuItem>\r\n//                             ))}\r\n//                         </Menu>\r\n//                     </Box>\r\n\r\n//                     <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n//                         {pages.map((page) => (\r\n//                             <Button\r\n//                                 key={page.name}\r\n//                                 component={Link}\r\n//                                 to={page.link}\r\n//                                 sx={{ my: 2, color: 'white', display: 'block', textDecoration: 'none' }}\r\n//                             >\r\n//                                 {page.name}\r\n//                             </Button>\r\n//                         ))}\r\n//                     </Box>\r\n\r\n//                     <Box sx={{ flexGrow: 0 }}>\r\n//                         <Tooltip title=\"Open settings\">\r\n//                             <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n//                                 <Avatar alt=\"User Avatar\" src=\"/static/images/avatar/2.jpg\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                         <Menu\r\n//                             sx={{ mt: '45px' }}\r\n//                             id=\"menu-appbar\"\r\n//                             anchorEl={anchorElUser}\r\n//                             anchorOrigin={{\r\n//                                 vertical: 'top',\r\n//                                 horizontal: 'right',\r\n//                             }}\r\n//                             keepMounted\r\n//                             transformOrigin={{\r\n//                                 vertical: 'top',\r\n//                                 horizontal: 'right',\r\n//                             }}\r\n//                             open={Boolean(anchorElUser)}\r\n//                             onClose={handleCloseUserMenu}\r\n//                         >\r\n//                             {settings.map((setting) => (\r\n//                                 <MenuItem\r\n//                                     key={setting.name}\r\n//                                     onClick={setting.name === 'Logout' ? handleLogout : handleCloseUserMenu}\r\n//                                 >\r\n//                                     <Typography textAlign=\"center\">\r\n//                                         {setting.name === 'Logout' ? (\r\n//                                             <span style={{ cursor: 'pointer' }}>Logout</span>\r\n//                                         ) : (\r\n//                                             <Link to={setting.link} style={{ textDecoration: 'none', color: 'grey' }}>\r\n//                                                 {setting.name}\r\n//                                             </Link>\r\n//                                         )}\r\n//                                     </Typography>\r\n//                                 </MenuItem>\r\n//                             ))}\r\n//                         </Menu>\r\n//                     </Box>\r\n//                 </Toolbar>\r\n//             </Container>\r\n//         </AppBar>\r\n//     );\r\n// }\r\n\r\n// export default ResponsiveAppBar;\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import useNavigate hook\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst pages = [\r\n    { name: 'Book NOW', link: '/room-Type' },\r\n    { name: 'Facilities', link: '/facilities' },\r\n    { name: 'Contact Us', link: '/about-us' },\r\n];\r\n\r\nconst settings = [\r\n    { name: 'Profile', link: '/profile' },\r\n    { name: 'Sign In', link: '/signinPage' },\r\n    { name: 'Bookings', link: '/bookings' },\r\n    { name: 'Logout', link: '/signinPage' }, // Will handle logout functionality\r\n];\r\n\r\nconst ResponsiveAppBar = () => {\r\n    const [anchorElNav, setAnchorElNav] = useState(null);\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n    const navigate = useNavigate(); // Initialize useNavigate hook\r\n\r\n    const handleOpenNavMenu = (event) => setAnchorElNav(event.currentTarget);\r\n\r\n    const handleOpenUserMenu = (event) => setAnchorElUser(event.currentTarget);\r\n\r\n    const handleCloseNavMenu = () => setAnchorElNav(null);\r\n\r\n    const handleCloseUserMenu = () => setAnchorElUser(null);\r\n\r\n    const handleLogout = () => {\r\n        // Logic to clear user session (e.g., localStorage.clear())\r\n        navigate('/signinPage'); // Redirect to the signin page after logout\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"static\" sx={{ backgroundColor: 'black' }}>\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar disableGutters>\r\n                    {/* Logo and Title */}\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\r\n                        <img\r\n                            src=\"/logoBlack.png\"\r\n                            alt=\"E-JUST Logo\"\r\n                            style={{\r\n                                padding: '20px 50px',\r\n                                width: '400px',\r\n                                height: '80px',\r\n                                marginRight: '40px',\r\n                            }}\r\n                        />\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            noWrap\r\n                            component=\"a\"\r\n                            href=\"#\"\r\n                            sx={{\r\n                                fontFamily: 'monospace',\r\n                                fontWeight: 700,\r\n                                color: 'white',\r\n                                textDecoration: 'none',\r\n                            }}\r\n                        >\r\n                            E-JUST Accommodations\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    {/* Mobile Menu */}\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            aria-label=\"open navigation menu\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleOpenNavMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElNav}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={Boolean(anchorElNav)}\r\n                            onClose={handleCloseNavMenu}\r\n                            sx={{ display: { xs: 'block', md: 'none' } }}\r\n                        >\r\n                            {pages.map((page) => (\r\n                                <MenuItem key={page.name} onClick={handleCloseNavMenu}>\r\n                                    <Typography textAlign=\"center\">\r\n                                        <Link to={page.link} style={{ textDecoration: 'none', color: 'grey' }}>\r\n                                            {page.name}\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Box>\r\n\r\n                    {/* Desktop Menu */}\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                        {pages.map((page) => (\r\n                            <Button\r\n                                key={page.name}\r\n                                component={Link}\r\n                                to={page.link}\r\n                                sx={{ my: 2, color: 'white', display: 'block', textDecoration: 'none' }}\r\n                            >\r\n                                {page.name}\r\n                            </Button>\r\n                        ))}\r\n                    </Box>\r\n\r\n                    {/* User Menu */}\r\n                    <Box sx={{ flexGrow: 0 }}>\r\n                        <Tooltip title=\"Open settings\">\r\n                            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                                <Avatar alt=\"User Avatar\" src=\"/static/images/avatar/2.jpg\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            sx={{ mt: '45px' }}\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElUser}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={Boolean(anchorElUser)}\r\n                            onClose={handleCloseUserMenu}\r\n                        >\r\n                            {settings.map((setting) => (\r\n                                <MenuItem\r\n                                    key={setting.name}\r\n                                    onClick={setting.name === 'Logout' ? handleLogout : handleCloseUserMenu}\r\n                                >\r\n                                    <Typography textAlign=\"center\">\r\n                                        <Link\r\n                                            to={setting.link}\r\n                                            style={{ textDecoration: 'none', color: 'grey' }}\r\n                                        >\r\n                                            {setting.name}\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Box>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default ResponsiveAppBar;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}