{"ast":null,"code":"const signIn = async () => {\n  try {\n    // Password validation regex:\n    // - At least 6 characters\n    // - At least one lowercase letter\n    // - At least one uppercase letter\n    // - At least one punctuation mark\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*(),.?\":{}|<>]).{6,}$/;\n    if (!passwordRegex.test(password)) {\n      alert(\"Password must be at least 6 characters long and include a lowercase letter, an uppercase letter, and a punctuation mark.\");\n      return;\n    }\n    console.log(\"Email:\", email, \"Password:\", password);\n    const response = await fetch(\"http://localhost:5000/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Unknown error occurred\");\n    }\n    const data = await response.json();\n    console.log(\"Login successful:\", data);\n    if (data.userId) {\n      localStorage.setItem(\"userId\", data.userId);\n      console.log(\"userId saved to localStorage:\", data.userId);\n    }\n\n    // If the email matches the admin's email, redirect to admin dashboard\n    if (email === \"faridaehab2005@gmail.com\") {\n      navigate(\"/adminProfile\");\n    } else {\n      navigate(\"/room-Type\");\n    }\n  } catch (error) {\n    console.error(\"Error during login:\", error.message);\n    alert(error.message || \"Login failed. Please try again.\");\n  }\n};","map":{"version":3,"names":["signIn","passwordRegex","test","password","alert","console","log","email","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","userId","localStorage","setItem","navigate","error"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/signin.js"],"sourcesContent":["const signIn = async () => {\r\n    try {\r\n        // Password validation regex:\r\n        // - At least 6 characters\r\n        // - At least one lowercase letter\r\n        // - At least one uppercase letter\r\n        // - At least one punctuation mark\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*(),.?\":{}|<>]).{6,}$/;\r\n\r\n        if (!passwordRegex.test(password)) {\r\n            alert(\"Password must be at least 6 characters long and include a lowercase letter, an uppercase letter, and a punctuation mark.\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"Email:\", email, \"Password:\", password);\r\n\r\n        const response = await fetch(\"http://localhost:5000/api/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || \"Unknown error occurred\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        console.log(\"Login successful:\", data);\r\n        if (data.userId) {\r\n            localStorage.setItem(\"userId\", data.userId);\r\n            console.log(\"userId saved to localStorage:\", data.userId);\r\n        }\r\n\r\n        // If the email matches the admin's email, redirect to admin dashboard\r\n        if (email === \"faridaehab2005@gmail.com\") {\r\n            navigate(\"/adminProfile\");\r\n        } else {\r\n            navigate(\"/room-Type\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error during login:\", error.message);\r\n        alert(error.message || \"Login failed. Please try again.\");\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,MAAAA,CAAA,KAAY;EACvB,IAAI;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,aAAa,GAAG,2DAA2D;IAEjF,IAAI,CAACA,aAAa,CAACC,IAAI,CAACC,QAAQ,CAAC,EAAE;MAC/BC,KAAK,CAAC,0HAA0H,CAAC;MACjI;IACJ;IAEAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,KAAK,EAAE,WAAW,EAAEJ,QAAQ,CAAC;IAEnD,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEJ;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,wBAAwB,CAAC;IAClE;IAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;IAElCZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEc,IAAI,CAAC;IACtC,IAAIA,IAAI,CAACC,MAAM,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEH,IAAI,CAACC,MAAM,CAAC;MAC3ChB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEc,IAAI,CAACC,MAAM,CAAC;IAC7D;;IAEA;IACA,IAAId,KAAK,KAAK,0BAA0B,EAAE;MACtCiB,QAAQ,CAAC,eAAe,CAAC;IAC7B,CAAC,MAAM;MACHA,QAAQ,CAAC,YAAY,CAAC;IAC1B;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZpB,OAAO,CAACoB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACN,OAAO,CAAC;IACnDf,KAAK,CAACqB,KAAK,CAACN,OAAO,IAAI,iCAAiC,CAAC;EAC7D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}