{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\dateSelect.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { Box, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomSlotPropsCallback() {\n  _s();\n  const [checkInDate, setCheckInDate] = React.useState(null); // State for check-in date\n  const [checkOutDate, setCheckOutDate] = React.useState(null); // State for check-out date\n\n  // Handle check-in date change\n  const handleCheckInDateChange = newDate => {\n    setCheckInDate(newDate);\n  };\n\n  // Handle check-out date change\n  const handleCheckOutDateChange = newDate => {\n    setCheckOutDate(newDate);\n  };\n  const handleSubmit = async () => {\n    if (!checkInDate || !checkOutDate) {\n      alert(\"Both check-in and check-out dates are required.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/booking', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          checkInDate: checkInDate.format('YYYY-MM-DD'),\n          checkOutDate: checkOutDate.format('YYYY-MM-DD')\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(data.message || 'An error occurred');\n      } else {\n        alert('Booking successful!');\n        console.log('Booking details:', data.booking);\n      }\n    } catch (error) {\n      console.error('Error during submission:', error);\n      alert('Something went wrong. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingLeft: 0,\n        flexDirection: 'column',\n        gap: 2,\n        alignItems: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-in Date\",\n        value: checkInDate,\n        onChange: handleCheckInDateChange,\n        slotProps: {\n          openPickerIcon: ownerState => ({\n            color: ownerState.open ? 'secondary' : 'primary'\n          })\n        },\n        textField: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-out Date\",\n        value: checkOutDate,\n        onChange: handleCheckOutDateChange,\n        slotProps: {\n          openPickerIcon: ownerState => ({\n            color: ownerState.open ? 'secondary' : 'primary'\n          })\n        },\n        textField: /*#__PURE__*/_jsxDEV(TextField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomSlotPropsCallback, \"cfP92MBFpwecYQ3svuaqmQfurIg=\");\n_c = CustomSlotPropsCallback;\nvar _c;\n$RefreshReg$(_c, \"CustomSlotPropsCallback\");","map":{"version":3,"names":["React","AdapterDayjs","LocalizationProvider","DatePicker","Box","TextField","jsxDEV","_jsxDEV","CustomSlotPropsCallback","_s","checkInDate","setCheckInDate","useState","checkOutDate","setCheckOutDate","handleCheckInDateChange","newDate","handleCheckOutDateChange","handleSubmit","alert","response","fetch","method","headers","body","JSON","stringify","format","data","json","ok","message","console","log","booking","error","dateAdapter","children","sx","paddingLeft","flexDirection","gap","alignItems","marginTop","label","value","onChange","slotProps","openPickerIcon","ownerState","color","open","textField","params","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/dateSelect.js"],"sourcesContent":["import * as React from 'react';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { Box, TextField } from '@mui/material';\r\n\r\nexport default function CustomSlotPropsCallback() {\r\n    const [checkInDate, setCheckInDate] = React.useState(null);  // State for check-in date\r\n    const [checkOutDate, setCheckOutDate] = React.useState(null); // State for check-out date\r\n\r\n    // Handle check-in date change\r\n    const handleCheckInDateChange = (newDate) => {\r\n        setCheckInDate(newDate);\r\n    };\r\n\r\n    // Handle check-out date change\r\n    const handleCheckOutDateChange = (newDate) => {\r\n        setCheckOutDate(newDate);\r\n    };\r\n    const handleSubmit = async () => {\r\n        if (!checkInDate || !checkOutDate) {\r\n            alert(\"Both check-in and check-out dates are required.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/booking', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    checkInDate: checkInDate.format('YYYY-MM-DD'),\r\n                    checkOutDate: checkOutDate.format('YYYY-MM-DD'),\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                alert(data.message || 'An error occurred');\r\n            } else {\r\n                alert('Booking successful!');\r\n                console.log('Booking details:', data.booking);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during submission:', error);\r\n            alert('Something went wrong. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <Box\r\n                sx={{\r\n                    paddingLeft: 0,\r\n                    flexDirection: 'column',\r\n                    gap: 2,\r\n                    alignItems: 'center',\r\n                    marginTop: '20px',\r\n                }}\r\n            >\r\n                {/* Check-in Date Picker */}\r\n                <DatePicker\r\n                    label=\"Check-in Date\"\r\n                    value={checkInDate}\r\n                    onChange={handleCheckInDateChange}\r\n                    slotProps={{\r\n                        openPickerIcon: (ownerState) => ({\r\n                            color: ownerState.open ? 'secondary' : 'primary',\r\n                        }),\r\n                    }}\r\n                    textField={(params) => <TextField {...props} />}\r\n                />\r\n\r\n                {/* Check-out Date Picker */}\r\n                <DatePicker\r\n                    label=\"Check-out Date\"\r\n                    value={checkOutDate}\r\n                    onChange={handleCheckOutDateChange}\r\n                    slotProps={{\r\n                        openPickerIcon: (ownerState) => ({\r\n                            color: ownerState.open ? 'secondary' : 'primary',\r\n                        }),\r\n                    }}\r\n                    textField={<TextField />}\r\n                />\r\n                \r\n            </Box>\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}