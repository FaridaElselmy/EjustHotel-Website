{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\register.js\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import { Button, TextField, Container, Typography, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import { Box } from '@mui/material';\n\n// export default function RegistrationPage() {\n//     const [email, setEmail] = React.useState('');\n//     const [password, setPassword] = React.useState('');\n//     const [Name, setName] = React.useState('');\n//     const [confirmPassword, setConfirmPassword] = React.useState('');\n//     const [isEjustStudent, setIsEjustStudent] = React.useState('');\n//     const [studentId, setStudentId] = React.useState(''); // State for student ID\n//     const navigate = useNavigate();\n\n//     const register = async () => {\n//         try {\n//             if (password !== confirmPassword) {\n//                 alert(\"Passwords do not match\");\n//                 return;\n//             }\n\n//             const payload = { email, password, isEjustStudent };\n//             if (isEjustStudent === 'yes') {\n//                 if (!studentId) {\n//                     alert(\"Please enter your Student ID\");\n//                     return;\n//                 }\n//                 payload.studentId = studentId;\n//             }\n\n//             const response = await fetch(\"http://localhost:5000/api/register\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify({Name,email,password,studentId}),\n//             });\n\n//             if (!response.ok) {\n//                 const errorData = await response.json();\n//                 throw new Error(errorData.message || \"Unknown error occurred\");\n//             }\n\n//             const data = await response.json();\n//             console.log(\"Registration successful:\", data);\n\n//             navigate(\"/signinPage\"); // Redirect to the sign-in page\n//         } catch (error) {\n//             console.error(\"Error during registration:\", error.message);\n//             alert(error.message || \"Registration failed. Please try again.\");\n//         }\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//                 alignItems: 'center',\n//                 justifyContent: 'center',\n//                 boxShadow: 3,\n//                 padding: '20px',\n//                 borderRadius: '8px',\n//                 backgroundColor: 'white',\n//                 width: '100%',\n//                 maxWidth: '600px',\n//                 margin: 'auto',\n//                 marginTop: '20px',\n//                 height: 'auto',\n//                 minHeight: '200px',\n//                 '@media (max-width:600px)': {\n//                     width: '90%',\n//                     padding: '16px',\n//                 },\n//             }}\n//         >\n//             <img\n//                 src=\"ejustLogoSignin.png\"\n//                 alt=\"Logo\"\n//                 style={{\n//                     width: '70px',\n//                     height: 'auto',\n//                     marginBottom: '16px',\n//                 }}\n//             />\n//             <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//                 Create an Account\n//             </Typography>\n//             <TextField\n//                 label=\"Name\"\n//                 type=\"Name\"\n//                 fullWidth\n//                 value={Name}\n//                 onChange={(e) => setName(e.target.value)}\n//                 margin=\"normal\"\n//             />\n//             <TextField\n//                 label=\"Email\"\n//                 type=\"email\"\n//                 fullWidth\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 margin=\"normal\"\n//             />\n//             <TextField\n//                 label=\"Password\"\n//                 type=\"password\"\n//                 fullWidth\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 margin=\"normal\"\n//             />\n//             <TextField\n//                 label=\"Confirm Password\"\n//                 type=\"password\"\n//                 fullWidth\n//                 value={confirmPassword}\n//                 onChange={(e) => setConfirmPassword(e.target.value)}\n//                 margin=\"normal\"\n//             />\n//             <FormControl fullWidth margin=\"normal\">\n//                 <InputLabel id=\"ejust-student-label\">Are you an EJUST student?</InputLabel>\n//                 <Select\n//                     labelId=\"ejust-student-label\"\n//                     value={isEjustStudent}\n//                     onChange={(e) => setIsEjustStudent(e.target.value)}\n//                 >\n//                     <MenuItem value=\"yes\">Yes</MenuItem>\n//                     <MenuItem value=\"no\">No</MenuItem>\n//                 </Select>\n//             </FormControl>\n//             {isEjustStudent === 'yes' && (\n//                 <TextField\n//                     label=\"Student ID\"\n//                     type=\"text\"\n//                     fullWidth\n//                     value={studentId}\n//                     onChange={(e) => setStudentId(e.target.value)}\n//                     margin=\"normal\"\n//                 />\n//             )}\n//             <Button\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 onClick={register}\n//                 style={{ marginTop: 16 }}\n//             >\n//                 Register\n//             </Button>\n//         </Box>\n//     );\n// }\nimport React from 'react';\nimport { Button, TextField, Typography, Select, MenuItem, FormControl, InputLabel, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\n// Functional wrapper component to provide navigate to class component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationPageWrapper = () => {\n  _s();\n  const navigate = useNavigate(); // Get navigate from the useNavigate hook\n  return /*#__PURE__*/_jsxDEV(RegistrationPageWithNavigate, {\n    navigate: navigate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 12\n  }, this);\n};\n\n// Class-based component using OOP approach\n_s(RegistrationPageWrapper, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationPageWrapper;\nclass RegistrationPageWithNavigate extends React.Component {\n  constructor(props) {\n    super(props);\n    // Method for registering a new user\n    this.register = async () => {\n      const {\n        email,\n        password,\n        confirmPassword,\n        isEjustStudent,\n        studentId\n      } = this.state;\n      if (password !== confirmPassword) {\n        alert(\"Passwords do not match\");\n        return;\n      }\n      const payload = {\n        email,\n        password,\n        isEjustStudent\n      };\n      if (isEjustStudent === 'yes') {\n        if (!studentId) {\n          alert(\"Please enter your Student ID\");\n          return;\n        }\n        payload.studentId = studentId;\n      }\n      try {\n        const response = await fetch(\"http://localhost:5000/api/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"Unknown error occurred\");\n        }\n        const data = await response.json();\n        localStorage.setItem(\"userId\", data.bookingId);\n        console.log(\"Registration successful:\", data);\n\n        // Use navigate function passed as prop to redirect\n        this.props.navigate(\"/signinPage\");\n      } catch (error) {\n        console.error(\"Error during registration:\", error.message);\n        alert(error.message || \"Registration failed. Please try again.\");\n      }\n    };\n    // Handler for form input changes\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.state = {\n      email: '',\n      password: '',\n      Name: '',\n      confirmPassword: '',\n      isEjustStudent: '',\n      studentId: ''\n    };\n  }\n  render() {\n    const {\n      email,\n      password,\n      confirmPassword,\n      Name,\n      isEjustStudent,\n      studentId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxShadow: 3,\n        padding: '20px',\n        borderRadius: '8px',\n        backgroundColor: 'white',\n        width: '100%',\n        maxWidth: '600px',\n        margin: 'auto',\n        marginTop: '20px',\n        height: 'auto',\n        minHeight: '200px',\n        '@media (max-width:600px)': {\n          width: '90%',\n          padding: '16px'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"ejustLogoSignin.png\",\n        alt: \"Logo\",\n        style: {\n          width: '70px',\n          height: 'auto',\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        name: \"Name\",\n        fullWidth: true,\n        value: Name,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        fullWidth: true,\n        value: email,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        fullWidth: true,\n        value: password,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Confirm Password\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        fullWidth: true,\n        value: confirmPassword,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"ejust-student-label\",\n          children: \"Are you an EJUST student?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"ejust-student-label\",\n          name: \"isEjustStudent\",\n          value: isEjustStudent,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), isEjustStudent === 'yes' && /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Student ID\",\n        name: \"studentId\",\n        type: \"text\",\n        fullWidth: true,\n        value: studentId,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.register,\n        style: {\n          marginTop: 16\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default RegistrationPageWrapper;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPageWrapper\");","map":{"version":3,"names":["React","Button","TextField","Typography","Select","MenuItem","FormControl","InputLabel","Box","useNavigate","jsxDEV","_jsxDEV","RegistrationPageWrapper","_s","navigate","RegistrationPageWithNavigate","fileName","_jsxFileName","lineNumber","columnNumber","_c","Component","constructor","props","register","email","password","confirmPassword","isEjustStudent","studentId","state","alert","payload","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","localStorage","setItem","bookingId","console","log","error","handleChange","e","setState","target","name","value","Name","render","sx","display","flexDirection","alignItems","justifyContent","boxShadow","padding","borderRadius","backgroundColor","width","maxWidth","margin","marginTop","height","minHeight","children","src","alt","style","marginBottom","variant","component","gutterBottom","label","fullWidth","onChange","type","id","labelId","color","onClick","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/register.js"],"sourcesContent":["// import * as React from 'react';\r\n// import { Button, TextField, Container, Typography, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Box } from '@mui/material';\r\n\r\n// export default function RegistrationPage() {\r\n//     const [email, setEmail] = React.useState('');\r\n//     const [password, setPassword] = React.useState('');\r\n//     const [Name, setName] = React.useState('');\r\n//     const [confirmPassword, setConfirmPassword] = React.useState('');\r\n//     const [isEjustStudent, setIsEjustStudent] = React.useState('');\r\n//     const [studentId, setStudentId] = React.useState(''); // State for student ID\r\n//     const navigate = useNavigate();\r\n\r\n//     const register = async () => {\r\n//         try {\r\n//             if (password !== confirmPassword) {\r\n//                 alert(\"Passwords do not match\");\r\n//                 return;\r\n//             }\r\n\r\n//             const payload = { email, password, isEjustStudent };\r\n//             if (isEjustStudent === 'yes') {\r\n//                 if (!studentId) {\r\n//                     alert(\"Please enter your Student ID\");\r\n//                     return;\r\n//                 }\r\n//                 payload.studentId = studentId;\r\n//             }\r\n\r\n//             const response = await fetch(\"http://localhost:5000/api/register\", {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//                 body: JSON.stringify({Name,email,password,studentId}),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 const errorData = await response.json();\r\n//                 throw new Error(errorData.message || \"Unknown error occurred\");\r\n//             }\r\n\r\n//             const data = await response.json();\r\n//             console.log(\"Registration successful:\", data);\r\n\r\n//             navigate(\"/signinPage\"); // Redirect to the sign-in page\r\n//         } catch (error) {\r\n//             console.error(\"Error during registration:\", error.message);\r\n//             alert(error.message || \"Registration failed. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <Box\r\n//             sx={{\r\n//                 display: 'flex',\r\n//                 flexDirection: 'column',\r\n//                 alignItems: 'center',\r\n//                 justifyContent: 'center',\r\n//                 boxShadow: 3,\r\n//                 padding: '20px',\r\n//                 borderRadius: '8px',\r\n//                 backgroundColor: 'white',\r\n//                 width: '100%',\r\n//                 maxWidth: '600px',\r\n//                 margin: 'auto',\r\n//                 marginTop: '20px',\r\n//                 height: 'auto',\r\n//                 minHeight: '200px',\r\n//                 '@media (max-width:600px)': {\r\n//                     width: '90%',\r\n//                     padding: '16px',\r\n//                 },\r\n//             }}\r\n//         >\r\n//             <img\r\n//                 src=\"ejustLogoSignin.png\"\r\n//                 alt=\"Logo\"\r\n//                 style={{\r\n//                     width: '70px',\r\n//                     height: 'auto',\r\n//                     marginBottom: '16px',\r\n//                 }}\r\n//             />\r\n//             <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n//                 Create an Account\r\n//             </Typography>\r\n//             <TextField\r\n//                 label=\"Name\"\r\n//                 type=\"Name\"\r\n//                 fullWidth\r\n//                 value={Name}\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//                 margin=\"normal\"\r\n//             />\r\n//             <TextField\r\n//                 label=\"Email\"\r\n//                 type=\"email\"\r\n//                 fullWidth\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 margin=\"normal\"\r\n//             />\r\n//             <TextField\r\n//                 label=\"Password\"\r\n//                 type=\"password\"\r\n//                 fullWidth\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 margin=\"normal\"\r\n//             />\r\n//             <TextField\r\n//                 label=\"Confirm Password\"\r\n//                 type=\"password\"\r\n//                 fullWidth\r\n//                 value={confirmPassword}\r\n//                 onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                 margin=\"normal\"\r\n//             />\r\n//             <FormControl fullWidth margin=\"normal\">\r\n//                 <InputLabel id=\"ejust-student-label\">Are you an EJUST student?</InputLabel>\r\n//                 <Select\r\n//                     labelId=\"ejust-student-label\"\r\n//                     value={isEjustStudent}\r\n//                     onChange={(e) => setIsEjustStudent(e.target.value)}\r\n//                 >\r\n//                     <MenuItem value=\"yes\">Yes</MenuItem>\r\n//                     <MenuItem value=\"no\">No</MenuItem>\r\n//                 </Select>\r\n//             </FormControl>\r\n//             {isEjustStudent === 'yes' && (\r\n//                 <TextField\r\n//                     label=\"Student ID\"\r\n//                     type=\"text\"\r\n//                     fullWidth\r\n//                     value={studentId}\r\n//                     onChange={(e) => setStudentId(e.target.value)}\r\n//                     margin=\"normal\"\r\n//                 />\r\n//             )}\r\n//             <Button\r\n//                 variant=\"contained\"\r\n//                 color=\"primary\"\r\n//                 onClick={register}\r\n//                 style={{ marginTop: 16 }}\r\n//             >\r\n//                 Register\r\n//             </Button>\r\n//         </Box>\r\n//     );\r\n// }\r\nimport React from 'react';\r\nimport { Button, TextField, Typography, Select, MenuItem, FormControl, InputLabel, Box } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Functional wrapper component to provide navigate to class component\r\nconst RegistrationPageWrapper = () => {\r\n    const navigate = useNavigate(); // Get navigate from the useNavigate hook\r\n    return <RegistrationPageWithNavigate navigate={navigate} />;\r\n};\r\n\r\n// Class-based component using OOP approach\r\nclass RegistrationPageWithNavigate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            Name: '',\r\n            confirmPassword: '',\r\n            isEjustStudent: '',\r\n            studentId: '',\r\n        };\r\n    }\r\n\r\n    // Method for registering a new user\r\n    register = async () => {\r\n        const { email, password, confirmPassword, isEjustStudent, studentId } = this.state;\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords do not match\");\r\n            return;\r\n        }\r\n\r\n        const payload = { email, password, isEjustStudent };\r\n        if (isEjustStudent === 'yes') {\r\n            if (!studentId) {\r\n                alert(\"Please enter your Student ID\");\r\n                return;\r\n            }\r\n            payload.studentId = studentId;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/register\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || \"Unknown error occurred\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            localStorage.setItem(\"userId\", data.bookingId);\r\n\r\n            console.log(\"Registration successful:\", data);\r\n\r\n            // Use navigate function passed as prop to redirect\r\n            this.props.navigate(\"/signinPage\");\r\n        } catch (error) {\r\n            console.error(\"Error during registration:\", error.message);\r\n            alert(error.message || \"Registration failed. Please try again.\");\r\n        }\r\n    };\r\n\r\n    // Handler for form input changes\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, password, confirmPassword, Name, isEjustStudent, studentId } = this.state;\r\n\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    boxShadow: 3,\r\n                    padding: '20px',\r\n                    borderRadius: '8px',\r\n                    backgroundColor: 'white',\r\n                    width: '100%',\r\n                    maxWidth: '600px',\r\n                    margin: 'auto',\r\n                    marginTop: '20px',\r\n                    height: 'auto',\r\n                    minHeight: '200px',\r\n                    '@media (max-width:600px)': {\r\n                        width: '90%',\r\n                        padding: '16px',\r\n                    },\r\n                }}\r\n            >\r\n                <img\r\n                    src=\"ejustLogoSignin.png\"\r\n                    alt=\"Logo\"\r\n                    style={{\r\n                        width: '70px',\r\n                        height: 'auto',\r\n                        marginBottom: '16px',\r\n                    }}\r\n                />\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                    Create an Account\r\n                </Typography>\r\n                <TextField\r\n                    label=\"Name\"\r\n                    name=\"Name\"\r\n                    fullWidth\r\n                    value={Name}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    label=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    value={confirmPassword}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"\r\n                />\r\n                <FormControl fullWidth margin=\"normal\">\r\n                    <InputLabel id=\"ejust-student-label\">Are you an EJUST student?</InputLabel>\r\n                    <Select\r\n                        labelId=\"ejust-student-label\"\r\n                        name=\"isEjustStudent\"\r\n                        value={isEjustStudent}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <MenuItem value=\"yes\">Yes</MenuItem>\r\n                        <MenuItem value=\"no\">No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                {isEjustStudent === 'yes' && (\r\n                    <TextField\r\n                        label=\"Student ID\"\r\n                        name=\"studentId\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={studentId}\r\n                        onChange={this.handleChange}\r\n                        margin=\"normal\"\r\n                    />\r\n                )}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.register}\r\n                    style={{ marginTop: 16 }}\r\n                >\r\n                    Register\r\n                </Button>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationPageWrapper;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}