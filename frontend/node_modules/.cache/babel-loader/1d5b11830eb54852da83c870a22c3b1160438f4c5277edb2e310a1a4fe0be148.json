{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\adminProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { Box, Typography, CircularProgress, Grid, Paper, List, ListItem, ListItemText, Divider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AdminManager {\n  constructor(apiBase) {\n    this.apiBase = apiBase;\n  }\n  async fetchMessages() {\n    const response = await fetch(`${this.apiBase}/api/admin/messages`);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch messages.\");\n    }\n    return await response.json();\n  }\n}\nfunction AdminProfile() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const adminManager = useMemo(() => new AdminManager(\"http://localhost:5000\"), []);\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        const fetchedMessages = await adminManager.fetchMessages();\n        setMessages(fetchedMessages);\n      } catch (err) {\n        setError(err.message || \"Error loading messages.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadMessages();\n  }, [adminManager]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\",\n        marginTop: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#f9f9f9\",\n      padding: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 10,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            padding: 3,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            sx: {\n              marginBottom: 2\n            },\n            children: \"Admin Dashboard: Received Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n            children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"User Email\",\n                  secondary: message.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Message\",\n                  secondary: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  marginY: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            color: \"textSecondary\",\n            children: \"No messages received.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminProfile, \"/HXHbV+asiB+6cDey5WDyuglTF4=\");\n_c = AdminProfile;\nexport default AdminProfile;\nvar _c;\n$RefreshReg$(_c, \"AdminProfile\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","Box","Typography","CircularProgress","Grid","Paper","List","ListItem","ListItemText","Divider","jsxDEV","_jsxDEV","AdminManager","constructor","apiBase","fetchMessages","response","fetch","ok","Error","json","AdminProfile","_s","loading","setLoading","error","setError","messages","setMessages","adminManager","loadMessages","fetchedMessages","err","message","sx","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginTop","variant","color","backgroundColor","padding","container","spacing","item","xs","sm","md","align","marginBottom","length","map","index","Fragment","primary","secondary","email","content","marginY","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/adminProfile.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport {\r\n    Box,\r\n    Typography,\r\n    CircularProgress,\r\n    Grid,\r\n    Paper,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n} from \"@mui/material\";\r\n\r\nclass AdminManager {\r\n    constructor(apiBase) {\r\n        this.apiBase = apiBase;\r\n    }\r\n\r\n    async fetchMessages() {\r\n        const response = await fetch(`${this.apiBase}/api/admin/messages`);\r\n        if (!response.ok) {\r\n            throw new Error(\"Failed to fetch messages.\");\r\n        }\r\n        return await response.json();\r\n    }\r\n}\r\n\r\nfunction AdminProfile() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const adminManager = useMemo(() => new AdminManager(\"http://localhost:5000\"), []);\r\n\r\n    useEffect(() => {\r\n        const loadMessages = async () => {\r\n            try {\r\n                const fetchedMessages = await adminManager.fetchMessages();\r\n                setMessages(fetchedMessages);\r\n            } catch (err) {\r\n                setError(err.message || \"Error loading messages.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        loadMessages();\r\n    }, [adminManager]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    minHeight: \"100vh\",\r\n                }}\r\n            >\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Box sx={{ textAlign: \"center\", marginTop: 3 }}>\r\n                <Typography variant=\"h6\" color=\"error\">\r\n                    {error}\r\n                </Typography>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                minHeight: \"100vh\",\r\n                backgroundColor: \"#f9f9f9\",\r\n                padding: 4,\r\n            }}\r\n        >\r\n            <Grid container spacing={2} justifyContent=\"center\">\r\n                <Grid item xs={12} sm={10} md={8}>\r\n                    <Paper\r\n                        sx={{\r\n                            padding: 3,\r\n                            backgroundColor: \"white\",\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"h4\" align=\"center\" sx={{ marginBottom: 2 }}>\r\n                            Admin Dashboard: Received Messages\r\n                        </Typography>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <List>\r\n                                {messages.map((message, index) => (\r\n                                    <React.Fragment key={index}>\r\n                                        <ListItem>\r\n                                            <ListItemText primary=\"User Email\" secondary={message.email} />\r\n                                        </ListItem>\r\n                                        <ListItem>\r\n                                            <ListItemText primary=\"Message\" secondary={message.content} />\r\n                                        </ListItem>\r\n                                        <Divider sx={{ marginY: 2 }} />\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </List>\r\n                        ) : (\r\n                            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\r\n                                No messages received.\r\n                            </Typography>\r\n                        )}\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default AdminProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}