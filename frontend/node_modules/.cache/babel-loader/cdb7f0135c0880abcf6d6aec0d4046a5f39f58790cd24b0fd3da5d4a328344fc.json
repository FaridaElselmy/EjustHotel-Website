{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\dateSelect.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { Box, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomSlotPropsCallback() {\n  _s();\n  const [checkInDate, setCheckInDate] = React.useState(null);\n  const [checkOutDate, setCheckOutDate] = React.useState(null);\n  const handleCheckInDateChange = newDate => {\n    setCheckInDate(newDate);\n  };\n  const handleCheckOutDateChange = newDate => {\n    setCheckOutDate(newDate);\n  };\n  const handleSubmit = async () => {\n    if (!checkInDate || !checkOutDate) {\n      alert(\"Please select both check-in and check-out dates\");\n      return;\n    }\n\n    // Send dates to the backend\n    try {\n      const response = await fetch(\"http://localhost:5000/api/booking/dates\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          checkInDate: checkInDate.toISOString(),\n          checkOutDate: checkOutDate.toISOString()\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Error occurred\");\n      }\n      const data = await response.json();\n      console.log(\"Dates saved successfully:\", data);\n    } catch (error) {\n      console.error(\"Error saving dates:\", error.message);\n      alert(error.message || \"Failed to save dates\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingLeft: 0,\n        flexDirection: 'column',\n        gap: 2,\n        alignItems: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-in Date\",\n        value: checkInDate,\n        onChange: handleCheckInDateChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-out Date\",\n        value: checkOutDate,\n        onChange: handleCheckOutDateChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomSlotPropsCallback, \"cfP92MBFpwecYQ3svuaqmQfurIg=\");\n_c = CustomSlotPropsCallback;\nvar _c;\n$RefreshReg$(_c, \"CustomSlotPropsCallback\");","map":{"version":3,"names":["React","AdapterDayjs","LocalizationProvider","DatePicker","Box","TextField","Button","jsxDEV","_jsxDEV","CustomSlotPropsCallback","_s","checkInDate","setCheckInDate","useState","checkOutDate","setCheckOutDate","handleCheckInDateChange","newDate","handleCheckOutDateChange","handleSubmit","alert","response","fetch","method","headers","body","JSON","stringify","toISOString","ok","errorData","json","Error","message","data","console","log","error","dateAdapter","children","sx","paddingLeft","flexDirection","gap","alignItems","marginTop","label","value","onChange","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/dateSelect.js"],"sourcesContent":["import * as React from 'react';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { Box, TextField, Button } from '@mui/material';\r\n\r\nexport default function CustomSlotPropsCallback() {\r\n    const [checkInDate, setCheckInDate] = React.useState(null);\r\n    const [checkOutDate, setCheckOutDate] = React.useState(null);\r\n\r\n    const handleCheckInDateChange = (newDate) => {\r\n        setCheckInDate(newDate);\r\n    };\r\n\r\n    const handleCheckOutDateChange = (newDate) => {\r\n        setCheckOutDate(newDate);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!checkInDate || !checkOutDate) {\r\n            alert(\"Please select both check-in and check-out dates\");\r\n            return;\r\n        }\r\n\r\n        // Send dates to the backend\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/booking/dates\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ checkInDate: checkInDate.toISOString(), checkOutDate: checkOutDate.toISOString() }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || \"Error occurred\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Dates saved successfully:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error saving dates:\", error.message);\r\n            alert(error.message || \"Failed to save dates\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <Box\r\n                sx={{\r\n                    paddingLeft: 0,\r\n                    flexDirection: 'column',\r\n                    gap: 2,\r\n                    alignItems: 'center',\r\n                    marginTop: '20px',\r\n                }}\r\n            >\r\n                <DatePicker\r\n                    label=\"Check-in Date\"\r\n                    value={checkInDate}\r\n                    onChange={handleCheckInDateChange}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n\r\n                <DatePicker\r\n                    label=\"Check-out Date\"\r\n                    value={checkOutDate}\r\n                    onChange={handleCheckOutDateChange}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n\r\n                <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n                    Submit Dates\r\n                </Button>\r\n            </Box>\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}