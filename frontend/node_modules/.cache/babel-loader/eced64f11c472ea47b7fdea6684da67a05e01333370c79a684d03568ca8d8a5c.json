{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\dateSelect.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { Box, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomSlotPropsCallback() {\n  _s();\n  const [checkInDate, setCheckInDate] = React.useState(null); // State for check-in date\n  const [checkOutDate, setCheckOutDate] = React.useState(null); // State for check-out date\n\n  // Handle check-in date change\n  const handleCheckInDateChange = newDate => {\n    setCheckInDate(newDate);\n  };\n\n  // Handle check-out date change\n  const handleCheckOutDateChange = newDate => {\n    setCheckOutDate(newDate);\n  };\n  async function handleDatesSubmission(checkInDate, checkOutDate) {\n    try {\n      const response = await axios.post('/booking/dates', {\n        checkInDate,\n        checkOutDate\n      });\n      console.log('Dates saved:', response.data);\n\n      // Save bookingId for the next step\n      const bookingId = response.data.bookingId;\n      return bookingId;\n    } catch (error) {\n      var _error$response;\n      console.error('Error submitting dates:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingLeft: 0,\n        flexDirection: 'column',\n        gap: 2,\n        alignItems: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-in Date\",\n        value: checkInDate,\n        onChange: handleCheckInDateChange,\n        slotProps: {\n          openPickerIcon: ownerState => ({\n            color: ownerState.open ? 'secondary' : 'primary'\n          })\n        },\n        textField: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Check-out Date\",\n        value: checkOutDate,\n        onChange: handleCheckOutDateChange,\n        slotProps: {\n          openPickerIcon: ownerState => ({\n            color: ownerState.open ? 'secondary' : 'primary'\n          })\n        },\n        textField: /*#__PURE__*/_jsxDEV(TextField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomSlotPropsCallback, \"cfP92MBFpwecYQ3svuaqmQfurIg=\");\n_c = CustomSlotPropsCallback;\nvar _c;\n$RefreshReg$(_c, \"CustomSlotPropsCallback\");","map":{"version":3,"names":["React","AdapterDayjs","LocalizationProvider","DatePicker","Box","TextField","jsxDEV","_jsxDEV","CustomSlotPropsCallback","_s","checkInDate","setCheckInDate","useState","checkOutDate","setCheckOutDate","handleCheckInDateChange","newDate","handleCheckOutDateChange","handleDatesSubmission","response","axios","post","console","log","data","bookingId","error","_error$response","message","dateAdapter","children","sx","paddingLeft","flexDirection","gap","alignItems","marginTop","label","value","onChange","slotProps","openPickerIcon","ownerState","color","open","textField","params","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/dateSelect.js"],"sourcesContent":["import * as React from 'react';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { Box, TextField } from '@mui/material';\r\n\r\nexport default function CustomSlotPropsCallback() {\r\n    const [checkInDate, setCheckInDate] = React.useState(null);  // State for check-in date\r\n    const [checkOutDate, setCheckOutDate] = React.useState(null); // State for check-out date\r\n\r\n    // Handle check-in date change\r\n    const handleCheckInDateChange = (newDate) => {\r\n        setCheckInDate(newDate);\r\n    };\r\n\r\n    // Handle check-out date change\r\n    const handleCheckOutDateChange = (newDate) => {\r\n        setCheckOutDate(newDate);\r\n    };\r\n\r\n    async function handleDatesSubmission(checkInDate, checkOutDate) {\r\n        try {\r\n            const response = await axios.post('/booking/dates', {\r\n                checkInDate,\r\n                checkOutDate,\r\n            });\r\n    \r\n            console.log('Dates saved:', response.data);\r\n    \r\n            // Save bookingId for the next step\r\n            const bookingId = response.data.bookingId;\r\n            return bookingId;\r\n        } catch (error) {\r\n            console.error('Error submitting dates:', error.response?.data || error.message);\r\n            throw error;\r\n        }\r\n    }\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <Box\r\n                sx={{\r\n                    paddingLeft: 0,\r\n                    flexDirection: 'column',\r\n                    gap: 2,\r\n                    alignItems: 'center',\r\n                    marginTop: '20px',\r\n                }}\r\n            >\r\n                {/* Check-in Date Picker */}\r\n                <DatePicker\r\n                    label=\"Check-in Date\"\r\n                    value={checkInDate}\r\n                    onChange={handleCheckInDateChange}\r\n                    slotProps={{\r\n                        openPickerIcon: (ownerState) => ({\r\n                            color: ownerState.open ? 'secondary' : 'primary',\r\n                        }),\r\n                    }}\r\n                    textField={(params) => <TextField {...params} />}\r\n                />\r\n\r\n                {/* Check-out Date Picker */}\r\n                <DatePicker\r\n                    label=\"Check-out Date\"\r\n                    value={checkOutDate}\r\n                    onChange={handleCheckOutDateChange}\r\n                    slotProps={{\r\n                        openPickerIcon: (ownerState) => ({\r\n                            color: ownerState.open ? 'secondary' : 'primary',\r\n                        }),\r\n                    }}\r\n                    textField={<TextField />}\r\n                />\r\n                \r\n            </Box>\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}