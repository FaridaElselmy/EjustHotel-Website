{"ast":null,"code":"// import * as React from 'react';\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import { Box, TextField, Button } from '@mui/material';\n\n// export default function CustomSlotPropsCallback() {\n//     const [checkInDate, setCheckInDate] = React.useState(null);\n//     const [checkOutDate, setCheckOutDate] = React.useState(null);\n\n//     const handleCheckInDateChange = (newDate) => {\n//         setCheckInDate(newDate);\n//     };\n\n//     const handleCheckOutDateChange = (newDate) => {\n//         setCheckOutDate(newDate);\n//     };\n\n//     const handleSubmit = async () => {\n//         if (!checkInDate || !checkOutDate) {\n//             alert(\"Please select both check-in and check-out dates\");\n//             return;\n//         }\n\n//         // Send dates to the backend\n//         try {\n//             const response = await fetch(\"http://localhost:5000/api/booking/dates\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify({ checkInDate: checkInDate.toISOString(), checkOutDate: checkOutDate.toISOString() }),\n//             });\n\n//             if (!response.ok) {\n//                 const errorData = await response.json();\n//                 throw new Error(errorData.message || \"Error occurred\");\n//             }\n\n//             const data = await response.json();\n//             console.log(\"Dates saved successfully:\", data);\n//         } catch (error) {\n//             console.error(\"Error saving dates:\", error.message);\n//             alert(error.message || \"Failed to save dates\");\n//         }\n//     };\n\n//     return (\n//         <LocalizationProvider dateAdapter={AdapterDayjs}>\n//             <Box\n//                 sx={{\n//                     paddingLeft: 0,\n//                     flexDirection: 'column',\n//                     gap: 2,\n//                     alignItems: 'center',\n//                     marginTop: '20px',\n//                 }}\n//             >\n//                 <DatePicker\n//                     label=\"Check-in Date\"\n//                     value={checkInDate}\n//                     onChange={handleCheckInDateChange}\n//                     renderInput={(params) => <TextField {...params} />}\n//                 />\n\n//                 <DatePicker\n//                     label=\"Check-out Date\"\n//                     value={checkOutDate}\n//                     onChange={handleCheckOutDateChange}\n//                     renderInput={(params) => <TextField {...params} />}\n//                 />\n\n//                 <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n//                     Submit Dates\n//                 </Button>\n//             </Box>\n//         </LocalizationProvider>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/dateSelect.js"],"sourcesContent":["// import * as React from 'react';\r\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n// import { Box, TextField, Button } from '@mui/material';\r\n\r\n// export default function CustomSlotPropsCallback() {\r\n//     const [checkInDate, setCheckInDate] = React.useState(null);\r\n//     const [checkOutDate, setCheckOutDate] = React.useState(null);\r\n\r\n//     const handleCheckInDateChange = (newDate) => {\r\n//         setCheckInDate(newDate);\r\n//     };\r\n\r\n//     const handleCheckOutDateChange = (newDate) => {\r\n//         setCheckOutDate(newDate);\r\n//     };\r\n\r\n//     const handleSubmit = async () => {\r\n//         if (!checkInDate || !checkOutDate) {\r\n//             alert(\"Please select both check-in and check-out dates\");\r\n//             return;\r\n//         }\r\n\r\n//         // Send dates to the backend\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:5000/api/booking/dates\", {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//                 body: JSON.stringify({ checkInDate: checkInDate.toISOString(), checkOutDate: checkOutDate.toISOString() }),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 const errorData = await response.json();\r\n//                 throw new Error(errorData.message || \"Error occurred\");\r\n//             }\r\n\r\n//             const data = await response.json();\r\n//             console.log(\"Dates saved successfully:\", data);\r\n//         } catch (error) {\r\n//             console.error(\"Error saving dates:\", error.message);\r\n//             alert(error.message || \"Failed to save dates\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n//             <Box\r\n//                 sx={{\r\n//                     paddingLeft: 0,\r\n//                     flexDirection: 'column',\r\n//                     gap: 2,\r\n//                     alignItems: 'center',\r\n//                     marginTop: '20px',\r\n//                 }}\r\n//             >\r\n//                 <DatePicker\r\n//                     label=\"Check-in Date\"\r\n//                     value={checkInDate}\r\n//                     onChange={handleCheckInDateChange}\r\n//                     renderInput={(params) => <TextField {...params} />}\r\n//                 />\r\n\r\n//                 <DatePicker\r\n//                     label=\"Check-out Date\"\r\n//                     value={checkOutDate}\r\n//                     onChange={handleCheckOutDateChange}\r\n//                     renderInput={(params) => <TextField {...params} />}\r\n//                 />\r\n\r\n//                 <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n//                     Submit Dates\r\n//                 </Button>\r\n//             </Box>\r\n//         </LocalizationProvider>\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}