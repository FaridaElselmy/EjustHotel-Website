{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farid\\\\hotel\\\\my-app\\\\Ejust-Hotel-Website\\\\src\\\\components\\\\signin.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { SignInPage } from '@toolpad/core/SignInPage';\nimport { useTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providers = [{\n  id: 'credentials',\n  name: 'Credentials'\n}];\nconst BRANDING = {\n  logo: /*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"./ejustLogoSignin.png\",\n    alt: \"E-JUST logo\",\n    style: {\n      height: 24\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this),\n  title: 'Sign in to E-JUST Accommodation'\n};\nexport default function BrandingSignInPage() {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n\n  // Use React state to manage email and password inputs\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const signIn = async () => {\n    try {\n      console.log(\"Email:\", email, \"Password:\", password); // Log email and password\n      const response = await fetch(\"http://localhost:5000/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Unknown error occurred\");\n      }\n      const data = await response.json();\n      console.log(\"Login successful:\", data);\n      localStorage.setItem(\"userId\", data.userId);\n      navigate(\"/room-Type\"); // Redirect to the roomtype page\n    } catch (error) {\n      console.error(\"Error during login:\", error.message);\n      alert(error.message || \"Login failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    branding: BRANDING,\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(SignInPage, {\n      signIn: async (provider, email, password) => {\n        if (!email || !password) {\n          alert(\"Email and password are required\");\n          return;\n        }\n        await signIn(); // Call the signIn function when both are valid\n      },\n      providers: providers,\n      slotProps: {\n        emailField: {\n          value: email,\n          // Bind value to state\n          onChange: e => setEmail(e.target.value) // Update state on input change\n        },\n        passwordField: {\n          value: password,\n          // Bind value to state\n          onChange: e => setPassword(e.target.value) // Update state on input change\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(BrandingSignInPage, \"Xt4Dlou5ID7cccHNXl0AN9Lo/ok=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = BrandingSignInPage;\nvar _c;\n$RefreshReg$(_c, \"BrandingSignInPage\");","map":{"version":3,"names":["React","AppProvider","SignInPage","useTheme","useNavigate","jsxDEV","_jsxDEV","providers","id","name","BRANDING","logo","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","title","BrandingSignInPage","_s","theme","navigate","email","setEmail","useState","password","setPassword","signIn","console","log","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","localStorage","setItem","userId","error","alert","branding","children","provider","slotProps","emailField","value","onChange","e","target","passwordField","_c","$RefreshReg$"],"sources":["C:/Users/farid/hotel/my-app/Ejust-Hotel-Website/src/components/signin.js"],"sourcesContent":["import * as React from 'react';\r\nimport { AppProvider } from '@toolpad/core/AppProvider';\r\nimport { SignInPage } from '@toolpad/core/SignInPage';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst providers = [{ id: 'credentials', name: 'Credentials' }];\r\n\r\nconst BRANDING = {\r\n    logo: (\r\n        <img\r\n            src=\"./ejustLogoSignin.png\"\r\n            alt=\"E-JUST logo\"\r\n            style={{ height: 24 }}\r\n        />\r\n    ),\r\n    title: 'Sign in to E-JUST Accommodation',\r\n};\r\n\r\nexport default function BrandingSignInPage() {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n\r\n    // Use React state to manage email and password inputs\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    const signIn = async () => {\r\n        try {\r\n            console.log(\"Email:\", email, \"Password:\", password); // Log email and password\r\n            const response = await fetch(\"http://localhost:5000/api/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n            \r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || \"Unknown error occurred\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Login successful:\", data);\r\n            localStorage.setItem(\"userId\", data.userId);\r\n\r\n\r\n            navigate(\"/room-Type\"); // Redirect to the roomtype page\r\n        } catch (error) {\r\n            console.error(\"Error during login:\", error.message);\r\n            alert(error.message || \"Login failed. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AppProvider branding={BRANDING} theme={theme}>\r\n            <SignInPage\r\n                signIn={async (provider, email, password) => {\r\n                    if (!email || !password) {\r\n                        alert(\"Email and password are required\");\r\n                        return;\r\n                    }\r\n                    await signIn(); // Call the signIn function when both are valid\r\n                }}\r\n                providers={providers}\r\n                slotProps={{\r\n                    emailField: {\r\n                        value: email, // Bind value to state\r\n                        onChange: (e) => setEmail(e.target.value), // Update state on input change\r\n                    },\r\n                    passwordField: {\r\n                        value: password, // Bind value to state\r\n                        onChange: (e) => setPassword(e.target.value), // Update state on input change\r\n                    },\r\n                }}\r\n            />\r\n        </AppProvider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}